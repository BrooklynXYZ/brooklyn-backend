"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@farcaster";
exports.ids = ["vendor-chunks/@farcaster"];
exports.modules = {

/***/ "(ssr)/./node_modules/@farcaster/auth-client/dist/index.mjs":
/*!************************************************************!*\
  !*** ./node_modules/@farcaster/auth-client/dist/index.mjs ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthClientError: () => (/* binding */ AuthClientError),\n/* harmony export */   authenticate: () => (/* binding */ authenticate),\n/* harmony export */   buildSignInMessage: () => (/* binding */ buildSignInMessage),\n/* harmony export */   createAppClient: () => (/* binding */ createAppClient),\n/* harmony export */   createChannel: () => (/* binding */ createChannel),\n/* harmony export */   createClient: () => (/* binding */ createClient),\n/* harmony export */   createWalletClient: () => (/* binding */ createWalletClient),\n/* harmony export */   generateNonce: () => (/* reexport safe */ viem_siwe__WEBPACK_IMPORTED_MODULE_10__.generateSiweNonce),\n/* harmony export */   get: () => (/* binding */ get),\n/* harmony export */   parseSignInURI: () => (/* binding */ parseSignInURI2),\n/* harmony export */   poll: () => (/* binding */ poll),\n/* harmony export */   post: () => (/* binding */ post),\n/* harmony export */   status: () => (/* binding */ status),\n/* harmony export */   unwrap: () => (/* binding */ unwrap),\n/* harmony export */   verifySignInMessage: () => (/* binding */ verifySignInMessage),\n/* harmony export */   viemConnector: () => (/* binding */ viemConnector),\n/* harmony export */   watchStatus: () => (/* binding */ watchStatus)\n/* harmony export */ });\n/* harmony import */ var viem_siwe__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! viem/siwe */ \"(ssr)/./node_modules/viem/_esm/utils/siwe/generateSiweNonce.js\");\n/* harmony import */ var neverthrow__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! neverthrow */ \"(ssr)/./node_modules/neverthrow/dist/index.es.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/createPublicClient.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/http.js\");\n/* harmony import */ var viem_siwe__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! viem/siwe */ \"(ssr)/./node_modules/viem/_esm/actions/siwe/verifySiweMessage.js\");\n/* harmony import */ var viem_siwe__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! viem/siwe */ \"(ssr)/./node_modules/viem/_esm/utils/siwe/parseSiweMessage.js\");\n/* harmony import */ var viem_siwe__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! viem/siwe */ \"(ssr)/./node_modules/viem/_esm/utils/siwe/validateSiweMessage.js\");\n/* harmony import */ var viem_chains__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! viem/chains */ \"(ssr)/./node_modules/viem/_esm/chains/definitions/optimism.js\");\n/* harmony import */ var viem_siwe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! viem/siwe */ \"(ssr)/./node_modules/viem/_esm/utils/siwe/createSiweMessage.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/clients/transports/fallback.js\");\n/* harmony import */ var viem__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! viem */ \"(ssr)/./node_modules/viem/_esm/utils/abi/encodeAbiParameters.js\");\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __publicField = (obj, key, value)=>{\n    __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n    return value;\n};\n// src/index.ts\n\n// src/errors.ts\nvar AuthClientError = class extends Error {\n    /**\n   * @param errCode - the AuthClientError code for this message\n   * @param context - a message, another Error, or a AuthClientErrorOpts\n   */ constructor(errCode, context){\n        let parsedContext;\n        if (typeof context === \"string\") {\n            parsedContext = {\n                message: context\n            };\n        } else if (context instanceof Error) {\n            parsedContext = {\n                cause: context,\n                message: context.message\n            };\n        } else {\n            parsedContext = context;\n        }\n        if (!parsedContext.message) {\n            parsedContext.message = parsedContext.cause?.message || \"\";\n        }\n        super(parsedContext.message, {\n            cause: parsedContext.cause\n        });\n        __publicField(this, \"errCode\");\n        /* Indicates if error message can be presented to the user */ __publicField(this, \"presentable\", false);\n        this.name = \"AuthClientError\";\n        this.errCode = errCode;\n    }\n};\nvar unwrap = (result)=>{\n    if (result.isErr()) {\n        return {\n            error: result.error,\n            isError: true\n        };\n    } else {\n        return {\n            ...result.value,\n            isError: false\n        };\n    }\n};\n// src/clients/transports/http.ts\n\nvar defaultPollOpts = {\n    interval: 1e3,\n    timeout: 1e4,\n    successCode: 200,\n    onResponse: ()=>{}\n};\nvar get = async (client, path5, opts)=>{\n    return neverthrow__WEBPACK_IMPORTED_MODULE_0__.ResultAsync.fromPromise(fetch(getURI(client, path5), {\n        headers: getHeaders(opts)\n    }), (e)=>{\n        return new AuthClientError(\"unknown\", e);\n    }).andThen((response)=>{\n        return neverthrow__WEBPACK_IMPORTED_MODULE_0__.ResultAsync.fromPromise(response.json(), (e)=>{\n            return new AuthClientError(\"unknown\", e);\n        }).andThen((data)=>{\n            return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)({\n                response,\n                data\n            });\n        });\n    });\n};\nvar post = async (client, path5, json, opts)=>{\n    return neverthrow__WEBPACK_IMPORTED_MODULE_0__.ResultAsync.fromPromise(fetch(getURI(client, path5), {\n        method: \"POST\",\n        body: JSON.stringify(json),\n        headers: getHeaders(opts)\n    }), (e)=>{\n        return new AuthClientError(\"unknown\", e);\n    }).andThen((response)=>{\n        return neverthrow__WEBPACK_IMPORTED_MODULE_0__.ResultAsync.fromPromise(response.json(), (e)=>{\n            return new AuthClientError(\"unknown\", e);\n        }).andThen((data)=>{\n            return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)({\n                response,\n                data\n            });\n        });\n    });\n};\nvar poll = async (client, path5, pollOpts, opts)=>{\n    const { timeout, interval, successCode, onResponse } = {\n        ...defaultPollOpts,\n        ...pollOpts\n    };\n    const deadline = Date.now() + timeout;\n    while(Date.now() < deadline){\n        const res = await get(client, path5, opts);\n        if (res.isOk()) {\n            const { response } = res.value;\n            onResponse(res.value);\n            if (response.status === successCode) {\n                return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)(res.value);\n            }\n            await new Promise((resolve)=>setTimeout(resolve, interval));\n        } else {\n            return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(res.error);\n        }\n    }\n    return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"unavailable\", `Polling timed out after ${timeout}ms`));\n};\nvar getURI = (client, path5)=>{\n    return `${client.config.relay}/${client.config.version}/${path5}`;\n};\nvar getHeaders = (opts)=>{\n    const headers = {\n        ...opts?.headers\n    };\n    if (opts?.authToken) {\n        headers[\"Authorization\"] = `Bearer ${opts.authToken}`;\n    }\n    return {\n        ...headers,\n        \"Content-Type\": \"application/json\"\n    };\n};\n// src/actions/app/createChannel.ts\nvar path = \"channel\";\nvar createChannel = async (client, { ...request })=>{\n    const response = await post(client, path, request);\n    return unwrap(response);\n};\n// src/actions/app/status.ts\nvar path2 = \"channel/status\";\nvar status = async (client, { channelToken })=>{\n    const response = await get(client, path2, {\n        authToken: channelToken\n    });\n    return unwrap(response);\n};\n// src/messages/verify.ts\n\n\n\n// src/messages/validate.ts\n\n\n// src/messages/constants.ts\nvar STATEMENT = \"Farcaster Auth\";\nvar CHAIN_ID = 10;\n// src/messages/validate.ts\nvar FID_URI_REGEX = /^farcaster:\\/\\/fid\\/([1-9]\\d*)\\/?$/;\nvar validate = (params)=>{\n    return neverthrow__WEBPACK_IMPORTED_MODULE_0__.Result.fromThrowable(()=>{\n        const siweMessage = (()=>{\n            if (typeof params === \"string\") {\n                return (0,viem_siwe__WEBPACK_IMPORTED_MODULE_1__.parseSiweMessage)(params);\n            }\n            return params;\n        })();\n        const isValid = (0,viem_siwe__WEBPACK_IMPORTED_MODULE_2__.validateSiweMessage)({\n            message: siweMessage\n        });\n        if (isValid) {\n            return siweMessage;\n        }\n        throw new Error(\"Invalid message\");\n    }, // If construction time validation fails, propagate the error\n    (e)=>new AuthClientError(\"bad_request.validation_failure\", e))().andThen(validateStatement).andThen(validateChainId).andThen(validateResources);\n};\nvar parseResources = (message)=>{\n    const fid = parseFid(message);\n    if (fid.isErr()) return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(fid.error);\n    return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)({\n        fid: fid.value\n    });\n};\nvar parseFid = (message)=>{\n    const resource = (message.resources ?? []).find((resource2)=>{\n        return FID_URI_REGEX.test(resource2);\n    });\n    if (!resource) {\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"bad_request.validation_failure\", \"No fid resource provided\"));\n    }\n    const fid = Number.parseInt(resource.match(FID_URI_REGEX)?.[1] ?? \"\");\n    if (Number.isNaN(fid)) {\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"bad_request.validation_failure\", \"Invalid fid\"));\n    }\n    return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)(fid);\n};\nvar validateStatement = (message)=>{\n    const validStatement = message.statement === STATEMENT || message.statement === \"Farcaster Connect\";\n    if (!validStatement) {\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"bad_request.validation_failure\", `Statement must be '${STATEMENT}'`));\n    }\n    return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)(message);\n};\nvar validateChainId = (message)=>{\n    if (message.chainId !== CHAIN_ID) {\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"bad_request.validation_failure\", `Chain ID must be ${CHAIN_ID}`));\n    }\n    return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)(message);\n};\nvar validateResources = (message)=>{\n    const fidResources = (message.resources ?? []).filter((resource)=>{\n        return FID_URI_REGEX.test(resource);\n    });\n    if (fidResources.length === 0) {\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"bad_request.validation_failure\", \"No fid resource provided\"));\n    }\n    if (fidResources.length > 1) {\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"bad_request.validation_failure\", \"Multiple fid resources provided\"));\n    }\n    return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)(message);\n};\n// src/messages/verify.ts\n\nvar defaultPublicClient = (0,viem__WEBPACK_IMPORTED_MODULE_3__.createPublicClient)({\n    chain: viem_chains__WEBPACK_IMPORTED_MODULE_4__.optimism,\n    transport: (0,viem__WEBPACK_IMPORTED_MODULE_5__.http)()\n});\nvar voidGetFid = (_custody)=>Promise.reject(new Error(\"Not implemented: Must provide an fid verifier\"));\nvar voidIsValidAuthAddress = (_custody)=>Promise.reject(new Error(\"Not implemented: Must provide an auth address verifier\"));\nvar verify = async (nonce, domain, message, signature, options = {\n    acceptAuthAddress: false,\n    getFid: voidGetFid,\n    isValidAuthAddress: voidIsValidAuthAddress\n})=>{\n    const { publicClient = defaultPublicClient } = options;\n    const valid = validate(message).andThen((message2)=>validateNonce(message2, nonce)).andThen((message2)=>validateDomain(message2, domain));\n    if (valid.isErr()) return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(valid.error);\n    const siwe = (await verifySiweMessage(message, signature, publicClient)).andThen(()=>mergeResources(valid.value));\n    if (siwe.isErr()) return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(siwe.error);\n    const auth = await verifyAuthorizedSigner(siwe.value, options);\n    if (auth.isErr()) return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(auth.error);\n    return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)(auth.value);\n};\nvar validateNonce = (message, nonce)=>{\n    if (message.nonce !== nonce) {\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"unauthorized\", \"Invalid nonce\"));\n    }\n    return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)(message);\n};\nvar validateDomain = (message, domain)=>{\n    if (message.domain !== domain) {\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"unauthorized\", \"Invalid domain\"));\n    }\n    return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)(message);\n};\nvar verifySiweMessage = async (message, signature, client)=>{\n    try {\n        const verified = await (0,viem_siwe__WEBPACK_IMPORTED_MODULE_6__.verifySiweMessage)(client, {\n            message,\n            signature\n        });\n        if (verified) {\n            return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)(void 0);\n        }\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"unauthorized\", \"Failed to verify message\"));\n    } catch (e) {\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"unknown\", e));\n    }\n};\nvar verifyAuthorizedSigner = async (response, options)=>{\n    const { getFid, isValidAuthAddress, acceptAuthAddress } = options;\n    const signer = response.data.address;\n    if (acceptAuthAddress) {\n        const authAddressResult = await neverthrow__WEBPACK_IMPORTED_MODULE_0__.ResultAsync.fromPromise(isValidAuthAddress(signer, BigInt(response.fid)), (e)=>new AuthClientError(\"unavailable\", e));\n        if (authAddressResult.isErr()) {\n            return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(authAddressResult.error);\n        }\n        if (authAddressResult.isOk() && authAddressResult.value === true) {\n            return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)({\n                ...response,\n                authMethod: \"authAddress\"\n            });\n        }\n        const fidResult = await neverthrow__WEBPACK_IMPORTED_MODULE_0__.ResultAsync.fromPromise(getFid(signer), (e)=>new AuthClientError(\"unavailable\", e));\n        if (fidResult.isErr()) {\n            return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(fidResult.error);\n        }\n        if (fidResult.isOk() && fidResult.value !== BigInt(response.fid)) {\n            return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"unauthorized\", `Invalid resource: signer ${signer} is not an auth address or owner of fid ${response.fid}.`));\n        }\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)({\n            ...response,\n            authMethod: \"custody\"\n        });\n    }\n    return neverthrow__WEBPACK_IMPORTED_MODULE_0__.ResultAsync.fromPromise(getFid(signer), (e)=>{\n        return new AuthClientError(\"unavailable\", e);\n    }).andThen((fid)=>{\n        if (fid !== BigInt(response.fid)) {\n            return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(new AuthClientError(\"unauthorized\", `Invalid resource: signer ${signer} does not own fid ${response.fid}.`));\n        }\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)({\n            ...response,\n            authMethod: \"custody\"\n        });\n    });\n};\nvar mergeResources = (message)=>{\n    return parseResources(message).andThen((resources)=>{\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)({\n            ...resources,\n            data: message,\n            success: true\n        });\n    });\n};\n// src/actions/app/verifySignInMessage.ts\nvar verifySignInMessage = async (client, { nonce, domain, message, signature, acceptAuthAddress = true })=>{\n    const result = await verify(nonce, domain, message, signature, {\n        acceptAuthAddress,\n        getFid: client.ethereum.getFid,\n        isValidAuthAddress: client.ethereum.isValidAuthAddress,\n        publicClient: client.ethereum.publicClient\n    });\n    return unwrap(result);\n};\n// src/actions/app/watchStatus.ts\nvar path3 = \"channel/status\";\nvar voidCallback = ()=>{};\nvar watchStatus = async (client, args)=>{\n    const result = await poll(client, path3, {\n        timeout: args?.timeout ?? 3e5,\n        interval: args?.interval ?? 1e3,\n        onResponse: args?.onResponse ?? voidCallback\n    }, {\n        authToken: args.channelToken\n    });\n    return unwrap(result);\n};\n// src/actions/auth/authenticate.ts\nvar path4 = \"channel/authenticate\";\nvar authenticate = async (client, { channelToken, authKey, ...request })=>{\n    const result = await post(client, path4, request, {\n        authToken: channelToken,\n        headers: {\n            \"X-Farcaster-Auth-Relay-Key\": authKey\n        }\n    });\n    return unwrap(result);\n};\n// src/messages/build.ts\n\n\nvar build = (params)=>{\n    const { fid, ...siweParams } = params;\n    const resources = siweParams.resources ?? [];\n    siweParams.version = \"1\";\n    siweParams.statement = STATEMENT;\n    siweParams.chainId = CHAIN_ID;\n    siweParams.issuedAt = /* @__PURE__ */ new Date();\n    siweParams.resources = [\n        buildFidResource(fid),\n        ...resources\n    ];\n    const valid = validate(siweParams);\n    if (valid.isErr()) return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(valid.error);\n    const siweMessage = valid.value;\n    return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)({\n        siweMessage,\n        message: (0,viem_siwe__WEBPACK_IMPORTED_MODULE_7__.createSiweMessage)(siweMessage)\n    });\n};\nvar buildFidResource = (fid)=>{\n    return `farcaster://fid/${fid}`;\n};\n// src/actions/auth/buildSignInMessage.ts\nvar buildSignInMessage = (_client, args)=>{\n    return unwrap(build(args));\n};\n// src/messages/parseSignInURI.ts\n\nvar parseSignInURI = (signInUri)=>{\n    const url = new URL(signInUri);\n    const searchParams = Object.fromEntries(url.searchParams.entries());\n    const { channelToken } = searchParams;\n    if (!channelToken) {\n        return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.err)(validationFail(\"No channel token provided\"));\n    }\n    return (0,neverthrow__WEBPACK_IMPORTED_MODULE_0__.ok)({\n        channelToken\n    });\n};\nvar validationFail = (message)=>{\n    return new AuthClientError(\"bad_request.validation_failure\", message);\n};\n// src/actions/auth/parseSignInURI.ts\nvar parseSignInURI2 = (_client, { uri })=>{\n    return unwrap(parseSignInURI(uri));\n};\n// src/clients/createClient.ts\nvar configDefaults = {\n    relay: \"https://relay.farcaster.xyz\",\n    version: \"v1\"\n};\nvar createClient = ({ ethereum, ...config })=>{\n    return {\n        config: {\n            ...configDefaults,\n            ...config\n        },\n        ethereum\n    };\n};\n// src/clients/createAppClient.ts\nvar createAppClient = (config)=>{\n    const client = createClient(config);\n    return {\n        ...client,\n        createChannel: (args)=>createChannel(client, args),\n        status: (args)=>status(client, args),\n        watchStatus: (args)=>watchStatus(client, args),\n        verifySignInMessage: (args)=>verifySignInMessage(client, args)\n    };\n};\n// src/clients/createWalletClient.ts\nvar createWalletClient = (config)=>{\n    const client = createClient(config);\n    return {\n        ...client,\n        authenticate: (args)=>authenticate(client, args),\n        buildSignInMessage: (args)=>buildSignInMessage(client, args),\n        parseSignInURI: (args)=>parseSignInURI2(client, args)\n    };\n};\n// src/clients/ethereum/viemConnector.ts\n\n\n// src/contracts/idRegistry.ts\nvar idRegistryABI = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_migrator\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"_initialOwner\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\"\n    },\n    {\n        inputs: [],\n        name: \"AlreadyMigrated\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"GatewayFrozen\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"HasId\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"HasNoId\",\n        type: \"error\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"currentNonce\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"InvalidAccountNonce\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"InvalidShortString\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"InvalidSignature\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"OnlyGuardian\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"OnlyMigrator\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"PermissionRevoked\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"SignatureExpired\",\n        type: \"error\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"string\",\n                name: \"str\",\n                type: \"string\"\n            }\n        ],\n        name: \"StringTooLong\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"Unauthorized\",\n        type: \"error\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"guardian\",\n                type: \"address\"\n            }\n        ],\n        name: \"Add\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"AdminReset\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"id\",\n                type: \"uint256\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"recovery\",\n                type: \"address\"\n            }\n        ],\n        name: \"ChangeRecoveryAddress\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [],\n        name: \"EIP712DomainChanged\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"idGateway\",\n                type: \"address\"\n            }\n        ],\n        name: \"FreezeIdGateway\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"migratedAt\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"Migrated\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"previousOwner\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\"\n            }\n        ],\n        name: \"OwnershipTransferStarted\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"previousOwner\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\"\n            }\n        ],\n        name: \"OwnershipTransferred\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\"\n            }\n        ],\n        name: \"Paused\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"id\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"Recover\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"id\",\n                type: \"uint256\"\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"recovery\",\n                type: \"address\"\n            }\n        ],\n        name: \"Register\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"guardian\",\n                type: \"address\"\n            }\n        ],\n        name: \"Remove\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"oldCounter\",\n                type: \"uint256\"\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"newCounter\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"SetIdCounter\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"oldIdGateway\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"newIdGateway\",\n                type: \"address\"\n            }\n        ],\n        name: \"SetIdGateway\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"oldMigrator\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"newMigrator\",\n                type: \"address\"\n            }\n        ],\n        name: \"SetMigrator\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"id\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"Transfer\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\"\n            }\n        ],\n        name: \"Unpaused\",\n        type: \"event\"\n    },\n    {\n        inputs: [],\n        name: \"CHANGE_RECOVERY_ADDRESS_TYPEHASH\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"TRANSFER_AND_CHANGE_RECOVERY_TYPEHASH\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"TRANSFER_TYPEHASH\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"VERSION\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"acceptOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"guardian\",\n                type: \"address\"\n            }\n        ],\n        name: \"addGuardian\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint24\",\n                        name: \"fid\",\n                        type: \"uint24\"\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"custody\",\n                        type: \"address\"\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"recovery\",\n                        type: \"address\"\n                    }\n                ],\n                internalType: \"struct IIdRegistry.BulkRegisterData[]\",\n                name: \"ids\",\n                type: \"tuple[]\"\n            }\n        ],\n        name: \"bulkRegisterIds\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint24\",\n                        name: \"fid\",\n                        type: \"uint24\"\n                    },\n                    {\n                        internalType: \"address\",\n                        name: \"custody\",\n                        type: \"address\"\n                    }\n                ],\n                internalType: \"struct IIdRegistry.BulkRegisterDefaultRecoveryData[]\",\n                name: \"ids\",\n                type: \"tuple[]\"\n            },\n            {\n                internalType: \"address\",\n                name: \"recovery\",\n                type: \"address\"\n            }\n        ],\n        name: \"bulkRegisterIdsWithDefaultRecovery\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint24[]\",\n                name: \"ids\",\n                type: \"uint24[]\"\n            }\n        ],\n        name: \"bulkResetIds\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"recovery\",\n                type: \"address\"\n            }\n        ],\n        name: \"changeRecoveryAddress\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"recovery\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"deadline\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"sig\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"changeRecoveryAddressFor\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"custodyOf\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"custody\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"domainSeparatorV4\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"eip712Domain\",\n        outputs: [\n            {\n                internalType: \"bytes1\",\n                name: \"fields\",\n                type: \"bytes1\"\n            },\n            {\n                internalType: \"string\",\n                name: \"name\",\n                type: \"string\"\n            },\n            {\n                internalType: \"string\",\n                name: \"version\",\n                type: \"string\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"chainId\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"address\",\n                name: \"verifyingContract\",\n                type: \"address\"\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"salt\",\n                type: \"bytes32\"\n            },\n            {\n                internalType: \"uint256[]\",\n                name: \"extensions\",\n                type: \"uint256[]\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"freezeIdGateway\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"gatewayFrozen\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"gracePeriod\",\n        outputs: [\n            {\n                internalType: \"uint24\",\n                name: \"\",\n                type: \"uint24\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"guardian\",\n                type: \"address\"\n            }\n        ],\n        name: \"guardians\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"isGuardian\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"structHash\",\n                type: \"bytes32\"\n            }\n        ],\n        name: \"hashTypedDataV4\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"idCounter\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"idGateway\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\"\n            }\n        ],\n        name: \"idOf\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"isMigrated\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"migrate\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"migratedAt\",\n        outputs: [\n            {\n                internalType: \"uint40\",\n                name: \"\",\n                type: \"uint40\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"migrator\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"name\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\"\n            }\n        ],\n        name: \"nonces\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"owner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"pause\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"paused\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"pendingOwner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"deadline\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"sig\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"recover\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"recoveryDeadline\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"recoverySig\",\n                type: \"bytes\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"toDeadline\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"toSig\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"recoverFor\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"recoveryOf\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"recovery\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"recovery\",\n                type: \"address\"\n            }\n        ],\n        name: \"register\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"guardian\",\n                type: \"address\"\n            }\n        ],\n        name: \"removeGuardian\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"renounceOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_counter\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"setIdCounter\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_idGateway\",\n                type: \"address\"\n            }\n        ],\n        name: \"setIdGateway\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_migrator\",\n                type: \"address\"\n            }\n        ],\n        name: \"setMigrator\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"deadline\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"sig\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"transfer\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"recovery\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"deadline\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"sig\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"transferAndChangeRecovery\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"recovery\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"fromDeadline\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"fromSig\",\n                type: \"bytes\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"toDeadline\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"toSig\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"transferAndChangeRecoveryFor\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"from\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"to\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"fromDeadline\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"fromSig\",\n                type: \"bytes\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"toDeadline\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"toSig\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"transferFor\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\"\n            }\n        ],\n        name: \"transferOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"unpause\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"useNonce\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"custodyAddress\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"digest\",\n                type: \"bytes32\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"sig\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"verifyFidSignature\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"isValid\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    }\n];\nvar ID_REGISTRY_ADDRESS = \"0x00000000Fc6c5F01Fc30151999387Bb99A9f489b\";\n// src/contracts/keyRegistry.ts\nvar keyRegistryABI = [\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_idRegistry\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"_migrator\",\n                type: \"address\"\n            },\n            {\n                internalType: \"address\",\n                name: \"_initialOwner\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"_maxKeysPerFid\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"constructor\"\n    },\n    {\n        inputs: [],\n        name: \"AlreadyMigrated\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"ExceedsMaximum\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"GatewayFrozen\",\n        type: \"error\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"currentNonce\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"InvalidAccountNonce\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"InvalidKeyType\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"InvalidMaxKeys\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"InvalidMetadata\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"InvalidMetadataType\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"InvalidShortString\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"InvalidSignature\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"InvalidState\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"OnlyGuardian\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"OnlyMigrator\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"PermissionRevoked\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"SignatureExpired\",\n        type: \"error\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"string\",\n                name: \"str\",\n                type: \"string\"\n            }\n        ],\n        name: \"StringTooLong\",\n        type: \"error\"\n    },\n    {\n        inputs: [],\n        name: \"Unauthorized\",\n        type: \"error\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint32\",\n                name: \"keyType\",\n                type: \"uint32\"\n            },\n            {\n                internalType: \"uint8\",\n                name: \"metadataType\",\n                type: \"uint8\"\n            }\n        ],\n        name: \"ValidatorNotFound\",\n        type: \"error\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            },\n            {\n                indexed: true,\n                internalType: \"uint32\",\n                name: \"keyType\",\n                type: \"uint32\"\n            },\n            {\n                indexed: true,\n                internalType: \"bytes\",\n                name: \"key\",\n                type: \"bytes\"\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"keyBytes\",\n                type: \"bytes\"\n            },\n            {\n                indexed: false,\n                internalType: \"uint8\",\n                name: \"metadataType\",\n                type: \"uint8\"\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"metadata\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"Add\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"guardian\",\n                type: \"address\"\n            }\n        ],\n        name: \"Add\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            },\n            {\n                indexed: true,\n                internalType: \"bytes\",\n                name: \"key\",\n                type: \"bytes\"\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"keyBytes\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"AdminReset\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [],\n        name: \"EIP712DomainChanged\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"keyGateway\",\n                type: \"address\"\n            }\n        ],\n        name: \"FreezeKeyGateway\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"migratedAt\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"Migrated\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"previousOwner\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\"\n            }\n        ],\n        name: \"OwnershipTransferStarted\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"previousOwner\",\n                type: \"address\"\n            },\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\"\n            }\n        ],\n        name: \"OwnershipTransferred\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\"\n            }\n        ],\n        name: \"Paused\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            },\n            {\n                indexed: true,\n                internalType: \"bytes\",\n                name: \"key\",\n                type: \"bytes\"\n            },\n            {\n                indexed: false,\n                internalType: \"bytes\",\n                name: \"keyBytes\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"Remove\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: \"address\",\n                name: \"guardian\",\n                type: \"address\"\n            }\n        ],\n        name: \"Remove\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"oldIdRegistry\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"newIdRegistry\",\n                type: \"address\"\n            }\n        ],\n        name: \"SetIdRegistry\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"oldKeyGateway\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"newKeyGateway\",\n                type: \"address\"\n            }\n        ],\n        name: \"SetKeyGateway\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"oldMax\",\n                type: \"uint256\"\n            },\n            {\n                indexed: false,\n                internalType: \"uint256\",\n                name: \"newMax\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"SetMaxKeysPerFid\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"oldMigrator\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"newMigrator\",\n                type: \"address\"\n            }\n        ],\n        name: \"SetMigrator\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"uint32\",\n                name: \"keyType\",\n                type: \"uint32\"\n            },\n            {\n                indexed: false,\n                internalType: \"uint8\",\n                name: \"metadataType\",\n                type: \"uint8\"\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"oldValidator\",\n                type: \"address\"\n            },\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"newValidator\",\n                type: \"address\"\n            }\n        ],\n        name: \"SetValidator\",\n        type: \"event\"\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: false,\n                internalType: \"address\",\n                name: \"account\",\n                type: \"address\"\n            }\n        ],\n        name: \"Unpaused\",\n        type: \"event\"\n    },\n    {\n        inputs: [],\n        name: \"REMOVE_TYPEHASH\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"VERSION\",\n        outputs: [\n            {\n                internalType: \"string\",\n                name: \"\",\n                type: \"string\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"acceptOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"fidOwner\",\n                type: \"address\"\n            },\n            {\n                internalType: \"uint32\",\n                name: \"keyType\",\n                type: \"uint32\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"key\",\n                type: \"bytes\"\n            },\n            {\n                internalType: \"uint8\",\n                name: \"metadataType\",\n                type: \"uint8\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"metadata\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"add\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"guardian\",\n                type: \"address\"\n            }\n        ],\n        name: \"addGuardian\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"fid\",\n                        type: \"uint256\"\n                    },\n                    {\n                        components: [\n                            {\n                                internalType: \"bytes\",\n                                name: \"key\",\n                                type: \"bytes\"\n                            },\n                            {\n                                internalType: \"bytes\",\n                                name: \"metadata\",\n                                type: \"bytes\"\n                            }\n                        ],\n                        internalType: \"struct IKeyRegistry.BulkAddKey[]\",\n                        name: \"keys\",\n                        type: \"tuple[]\"\n                    }\n                ],\n                internalType: \"struct IKeyRegistry.BulkAddData[]\",\n                name: \"items\",\n                type: \"tuple[]\"\n            }\n        ],\n        name: \"bulkAddKeysForMigration\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        internalType: \"uint256\",\n                        name: \"fid\",\n                        type: \"uint256\"\n                    },\n                    {\n                        internalType: \"bytes[]\",\n                        name: \"keys\",\n                        type: \"bytes[]\"\n                    }\n                ],\n                internalType: \"struct IKeyRegistry.BulkResetData[]\",\n                name: \"items\",\n                type: \"tuple[]\"\n            }\n        ],\n        name: \"bulkResetKeysForMigration\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"domainSeparatorV4\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"eip712Domain\",\n        outputs: [\n            {\n                internalType: \"bytes1\",\n                name: \"fields\",\n                type: \"bytes1\"\n            },\n            {\n                internalType: \"string\",\n                name: \"name\",\n                type: \"string\"\n            },\n            {\n                internalType: \"string\",\n                name: \"version\",\n                type: \"string\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"chainId\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"address\",\n                name: \"verifyingContract\",\n                type: \"address\"\n            },\n            {\n                internalType: \"bytes32\",\n                name: \"salt\",\n                type: \"bytes32\"\n            },\n            {\n                internalType: \"uint256[]\",\n                name: \"extensions\",\n                type: \"uint256[]\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"freezeKeyGateway\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"gatewayFrozen\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"gracePeriod\",\n        outputs: [\n            {\n                internalType: \"uint24\",\n                name: \"\",\n                type: \"uint24\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"guardian\",\n                type: \"address\"\n            }\n        ],\n        name: \"guardians\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"isGuardian\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"structHash\",\n                type: \"bytes32\"\n            }\n        ],\n        name: \"hashTypedDataV4\",\n        outputs: [\n            {\n                internalType: \"bytes32\",\n                name: \"\",\n                type: \"bytes32\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"idRegistry\",\n        outputs: [\n            {\n                internalType: \"contract IdRegistryLike\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"isMigrated\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"enum IKeyRegistry.KeyState\",\n                name: \"state\",\n                type: \"uint8\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"index\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"keyAt\",\n        outputs: [\n            {\n                internalType: \"bytes\",\n                name: \"\",\n                type: \"bytes\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"key\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"keyDataOf\",\n        outputs: [\n            {\n                components: [\n                    {\n                        internalType: \"enum IKeyRegistry.KeyState\",\n                        name: \"state\",\n                        type: \"uint8\"\n                    },\n                    {\n                        internalType: \"uint32\",\n                        name: \"keyType\",\n                        type: \"uint32\"\n                    }\n                ],\n                internalType: \"struct IKeyRegistry.KeyData\",\n                name: \"\",\n                type: \"tuple\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"keyGateway\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"key\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"keys\",\n        outputs: [\n            {\n                internalType: \"enum IKeyRegistry.KeyState\",\n                name: \"state\",\n                type: \"uint8\"\n            },\n            {\n                internalType: \"uint32\",\n                name: \"keyType\",\n                type: \"uint32\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"enum IKeyRegistry.KeyState\",\n                name: \"state\",\n                type: \"uint8\"\n            }\n        ],\n        name: \"keysOf\",\n        outputs: [\n            {\n                internalType: \"bytes[]\",\n                name: \"\",\n                type: \"bytes[]\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"enum IKeyRegistry.KeyState\",\n                name: \"state\",\n                type: \"uint8\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"startIdx\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"batchSize\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"keysOf\",\n        outputs: [\n            {\n                internalType: \"bytes[]\",\n                name: \"page\",\n                type: \"bytes[]\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"nextIdx\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"maxKeysPerFid\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"migrate\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"migratedAt\",\n        outputs: [\n            {\n                internalType: \"uint40\",\n                name: \"\",\n                type: \"uint40\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"migrator\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"owner\",\n                type: \"address\"\n            }\n        ],\n        name: \"nonces\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"owner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"pause\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"paused\",\n        outputs: [\n            {\n                internalType: \"bool\",\n                name: \"\",\n                type: \"bool\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"pendingOwner\",\n        outputs: [\n            {\n                internalType: \"address\",\n                name: \"\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"bytes\",\n                name: \"key\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"remove\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"fidOwner\",\n                type: \"address\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"key\",\n                type: \"bytes\"\n            },\n            {\n                internalType: \"uint256\",\n                name: \"deadline\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"bytes\",\n                name: \"sig\",\n                type: \"bytes\"\n            }\n        ],\n        name: \"removeFor\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"guardian\",\n                type: \"address\"\n            }\n        ],\n        name: \"removeGuardian\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"renounceOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_idRegistry\",\n                type: \"address\"\n            }\n        ],\n        name: \"setIdRegistry\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_keyGateway\",\n                type: \"address\"\n            }\n        ],\n        name: \"setKeyGateway\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"_maxKeysPerFid\",\n                type: \"uint256\"\n            }\n        ],\n        name: \"setMaxKeysPerFid\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"_migrator\",\n                type: \"address\"\n            }\n        ],\n        name: \"setMigrator\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint32\",\n                name: \"keyType\",\n                type: \"uint32\"\n            },\n            {\n                internalType: \"uint8\",\n                name: \"metadataType\",\n                type: \"uint8\"\n            },\n            {\n                internalType: \"contract IMetadataValidator\",\n                name: \"validator\",\n                type: \"address\"\n            }\n        ],\n        name: \"setValidator\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint256\",\n                name: \"fid\",\n                type: \"uint256\"\n            },\n            {\n                internalType: \"enum IKeyRegistry.KeyState\",\n                name: \"state\",\n                type: \"uint8\"\n            }\n        ],\n        name: \"totalKeys\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"address\",\n                name: \"newOwner\",\n                type: \"address\"\n            }\n        ],\n        name: \"transferOwnership\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"unpause\",\n        outputs: [],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [],\n        name: \"useNonce\",\n        outputs: [\n            {\n                internalType: \"uint256\",\n                name: \"\",\n                type: \"uint256\"\n            }\n        ],\n        stateMutability: \"nonpayable\",\n        type: \"function\"\n    },\n    {\n        inputs: [\n            {\n                internalType: \"uint32\",\n                name: \"keyType\",\n                type: \"uint32\"\n            },\n            {\n                internalType: \"uint8\",\n                name: \"metadataType\",\n                type: \"uint8\"\n            }\n        ],\n        name: \"validators\",\n        outputs: [\n            {\n                internalType: \"contract IMetadataValidator\",\n                name: \"validator\",\n                type: \"address\"\n            }\n        ],\n        stateMutability: \"view\",\n        type: \"function\"\n    }\n];\nvar KEY_REGISTRY_ADDRESS = \"0x00000000fc1237824fb747abde0ff18990e59b7e\";\n// src/clients/ethereum/viemConnector.ts\nvar viemConnector = (args)=>{\n    const transport = (()=>{\n        if (args?.rpcUrls) {\n            return (0,viem__WEBPACK_IMPORTED_MODULE_8__.fallback)(args.rpcUrls.map((rpcUrl)=>(0,viem__WEBPACK_IMPORTED_MODULE_5__.http)(rpcUrl)));\n        }\n        if (!args?.rpcUrl) {\n            console.warn(\"No `rpcUrl` provided to Viem connector, using public endpoint. Do not use this in production\");\n        }\n        return (0,viem__WEBPACK_IMPORTED_MODULE_5__.http)(args?.rpcUrl);\n    })();\n    const publicClient = (0,viem__WEBPACK_IMPORTED_MODULE_3__.createPublicClient)({\n        chain: viem_chains__WEBPACK_IMPORTED_MODULE_4__.optimism,\n        transport\n    });\n    const getFid = async (custody)=>{\n        return publicClient.readContract({\n            address: ID_REGISTRY_ADDRESS,\n            abi: idRegistryABI,\n            functionName: \"idOf\",\n            args: [\n                custody\n            ]\n        });\n    };\n    const isValidAuthAddress = async (authAddress, fid)=>{\n        const paddedAddress = (0,viem__WEBPACK_IMPORTED_MODULE_9__.encodeAbiParameters)([\n            {\n                name: \"authAddress\",\n                type: \"address\"\n            }\n        ], [\n            authAddress\n        ]);\n        const keyData = await publicClient.readContract({\n            address: KEY_REGISTRY_ADDRESS,\n            abi: keyRegistryABI,\n            functionName: \"keyDataOf\",\n            args: [\n                fid,\n                paddedAddress\n            ]\n        });\n        return keyData.keyType === 2 && keyData.state === 1;\n    };\n    return {\n        getFid,\n        isValidAuthAddress,\n        publicClient\n    };\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQGZhcmNhc3Rlci9hdXRoLWNsaWVudC9kaXN0L2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBSUEsWUFBWUMsT0FBT0MsY0FBYztBQUNyQyxJQUFJQyxrQkFBa0IsQ0FBQ0MsS0FBS0MsS0FBS0MsUUFBVUQsT0FBT0QsTUFBTUosVUFBVUksS0FBS0MsS0FBSztRQUFFRSxZQUFZO1FBQU1DLGNBQWM7UUFBTUMsVUFBVTtRQUFNSDtJQUFNLEtBQUtGLEdBQUcsQ0FBQ0MsSUFBSSxHQUFHQztBQUMxSixJQUFJSSxnQkFBZ0IsQ0FBQ04sS0FBS0MsS0FBS0M7SUFDN0JILGdCQUFnQkMsS0FBSyxPQUFPQyxRQUFRLFdBQVdBLE1BQU0sS0FBS0EsS0FBS0M7SUFDL0QsT0FBT0E7QUFDVDtBQUVBLGVBQWU7QUFDK0I7QUFFOUMsZ0JBQWdCO0FBQ2hCLElBQUlNLGtCQUFrQixjQUFjQztJQUNsQzs7O0dBR0MsR0FDREMsWUFBWUMsT0FBTyxFQUFFQyxPQUFPLENBQUU7UUFDNUIsSUFBSUM7UUFDSixJQUFJLE9BQU9ELFlBQVksVUFBVTtZQUMvQkMsZ0JBQWdCO2dCQUFFQyxTQUFTRjtZQUFRO1FBQ3JDLE9BQU8sSUFBSUEsbUJBQW1CSCxPQUFPO1lBQ25DSSxnQkFBZ0I7Z0JBQUVFLE9BQU9IO2dCQUFTRSxTQUFTRixRQUFRRSxPQUFPO1lBQUM7UUFDN0QsT0FBTztZQUNMRCxnQkFBZ0JEO1FBQ2xCO1FBQ0EsSUFBSSxDQUFDQyxjQUFjQyxPQUFPLEVBQUU7WUFDMUJELGNBQWNDLE9BQU8sR0FBR0QsY0FBY0UsS0FBSyxFQUFFRCxXQUFXO1FBQzFEO1FBQ0EsS0FBSyxDQUFDRCxjQUFjQyxPQUFPLEVBQUU7WUFBRUMsT0FBT0YsY0FBY0UsS0FBSztRQUFDO1FBQzFEVCxjQUFjLElBQUksRUFBRTtRQUNwQiwyREFBMkQsR0FDM0RBLGNBQWMsSUFBSSxFQUFFLGVBQWU7UUFD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LENBQUNoQyxLQUFLK0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsQ0FBQ0MsU0FBV2xCLDBDQUFLQSxDQUFDa0I7UUFDckQ7UUFDQSxJQUFJLENBQUNqRCxNQUFNaUQsUUFBUTtZQUNqQkMsUUFBUUMsSUFBSSxDQUFDO1FBQ2Y7UUFDQSxPQUFPcEIsMENBQUtBLENBQUMvQixNQUFNaUQ7SUFDckI7SUFDQSxNQUFNdkUsZUFBZW1ELHdEQUFtQkEsQ0FBQztRQUN2Q2pFLE9BQU9xRSxpREFBU0E7UUFDaEJwRTtJQUNGO0lBQ0EsTUFBTVcsU0FBUyxPQUFPNEU7UUFDcEIsT0FBTzFFLGFBQWEyRSxZQUFZLENBQUM7WUFDL0JoRSxTQUFTc0Q7WUFDVFcsS0FBS3BCO1lBQ0xxQixjQUFjO1lBQ2R2RCxNQUFNO2dCQUFDb0Q7YUFBUTtRQUNqQjtJQUNGO0lBQ0EsTUFBTTNFLHFCQUFxQixPQUFPK0UsYUFBYS9HO1FBQzdDLE1BQU1nSCxnQkFBZ0IzQix5REFBbUJBLENBQUM7WUFBQztnQkFBRWxLLE1BQU07Z0JBQWV5SyxNQUFNO1lBQVU7U0FBRSxFQUFFO1lBQUNtQjtTQUFZO1FBQ25HLE1BQU1FLFVBQVUsTUFBTWhGLGFBQWEyRSxZQUFZLENBQUM7WUFDOUNoRSxTQUFTd0Q7WUFDVFMsS0FBS1Y7WUFDTFcsY0FBYztZQUNkdkQsTUFBTTtnQkFBQ3ZEO2dCQUFLZ0g7YUFBYztRQUM1QjtRQUNBLE9BQU9DLFFBQVFDLE9BQU8sS0FBSyxLQUFLRCxRQUFRRSxLQUFLLEtBQUs7SUFDcEQ7SUFDQSxPQUFPO1FBQ0xwRjtRQUNBQztRQUNBQztJQUNGO0FBQ0Y7QUFtQkUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9icm9va2x5bi1taW5pYXBwLy4vbm9kZV9tb2R1bGVzL0BmYXJjYXN0ZXIvYXV0aC1jbGllbnQvZGlzdC9pbmRleC5tanM/OWYyNSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19kZWZQcm9wID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xudmFyIF9fZGVmTm9ybWFsUHJvcCA9IChvYmosIGtleSwgdmFsdWUpID0+IGtleSBpbiBvYmogPyBfX2RlZlByb3Aob2JqLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgY29uZmlndXJhYmxlOiB0cnVlLCB3cml0YWJsZTogdHJ1ZSwgdmFsdWUgfSkgOiBvYmpba2V5XSA9IHZhbHVlO1xudmFyIF9fcHVibGljRmllbGQgPSAob2JqLCBrZXksIHZhbHVlKSA9PiB7XG4gIF9fZGVmTm9ybWFsUHJvcChvYmosIHR5cGVvZiBrZXkgIT09IFwic3ltYm9sXCIgPyBrZXkgKyBcIlwiIDoga2V5LCB2YWx1ZSk7XG4gIHJldHVybiB2YWx1ZTtcbn07XG5cbi8vIHNyYy9pbmRleC50c1xuaW1wb3J0IHsgZ2VuZXJhdGVTaXdlTm9uY2UgfSBmcm9tIFwidmllbS9zaXdlXCI7XG5cbi8vIHNyYy9lcnJvcnMudHNcbnZhciBBdXRoQ2xpZW50RXJyb3IgPSBjbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgLyoqXG4gICAqIEBwYXJhbSBlcnJDb2RlIC0gdGhlIEF1dGhDbGllbnRFcnJvciBjb2RlIGZvciB0aGlzIG1lc3NhZ2VcbiAgICogQHBhcmFtIGNvbnRleHQgLSBhIG1lc3NhZ2UsIGFub3RoZXIgRXJyb3IsIG9yIGEgQXV0aENsaWVudEVycm9yT3B0c1xuICAgKi9cbiAgY29uc3RydWN0b3IoZXJyQ29kZSwgY29udGV4dCkge1xuICAgIGxldCBwYXJzZWRDb250ZXh0O1xuICAgIGlmICh0eXBlb2YgY29udGV4dCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgcGFyc2VkQ29udGV4dCA9IHsgbWVzc2FnZTogY29udGV4dCB9O1xuICAgIH0gZWxzZSBpZiAoY29udGV4dCBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICBwYXJzZWRDb250ZXh0ID0geyBjYXVzZTogY29udGV4dCwgbWVzc2FnZTogY29udGV4dC5tZXNzYWdlIH07XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhcnNlZENvbnRleHQgPSBjb250ZXh0O1xuICAgIH1cbiAgICBpZiAoIXBhcnNlZENvbnRleHQubWVzc2FnZSkge1xuICAgICAgcGFyc2VkQ29udGV4dC5tZXNzYWdlID0gcGFyc2VkQ29udGV4dC5jYXVzZT8ubWVzc2FnZSB8fCBcIlwiO1xuICAgIH1cbiAgICBzdXBlcihwYXJzZWRDb250ZXh0Lm1lc3NhZ2UsIHsgY2F1c2U6IHBhcnNlZENvbnRleHQuY2F1c2UgfSk7XG4gICAgX19wdWJsaWNGaWVsZCh0aGlzLCBcImVyckNvZGVcIik7XG4gICAgLyogSW5kaWNhdGVzIGlmIGVycm9yIG1lc3NhZ2UgY2FuIGJlIHByZXNlbnRlZCB0byB0aGUgdXNlciAqL1xuICAgIF9fcHVibGljRmllbGQodGhpcywgXCJwcmVzZW50YWJsZVwiLCBmYWxzZSk7XG4gICAgdGhpcy5uYW1lID0gXCJBdXRoQ2xpZW50RXJyb3JcIjtcbiAgICB0aGlzLmVyckNvZGUgPSBlcnJDb2RlO1xuICB9XG59O1xudmFyIHVud3JhcCA9IChyZXN1bHQpID0+IHtcbiAgaWYgKHJlc3VsdC5pc0VycigpKSB7XG4gICAgcmV0dXJuIHsgZXJyb3I6IHJlc3VsdC5lcnJvciwgaXNFcnJvcjogdHJ1ZSB9O1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB7IC4uLnJlc3VsdC52YWx1ZSwgaXNFcnJvcjogZmFsc2UgfTtcbiAgfVxufTtcblxuLy8gc3JjL2NsaWVudHMvdHJhbnNwb3J0cy9odHRwLnRzXG5pbXBvcnQgeyBSZXN1bHRBc3luYywgb2ssIGVyciB9IGZyb20gXCJuZXZlcnRocm93XCI7XG52YXIgZGVmYXVsdFBvbGxPcHRzID0ge1xuICBpbnRlcnZhbDogMWUzLFxuICB0aW1lb3V0OiAxZTQsXG4gIHN1Y2Nlc3NDb2RlOiAyMDAsXG4gIG9uUmVzcG9uc2U6ICgpID0+IHtcbiAgfVxufTtcbnZhciBnZXQgPSBhc3luYyAoY2xpZW50LCBwYXRoNSwgb3B0cykgPT4ge1xuICByZXR1cm4gUmVzdWx0QXN5bmMuZnJvbVByb21pc2UoXG4gICAgZmV0Y2goZ2V0VVJJKGNsaWVudCwgcGF0aDUpLCB7XG4gICAgICBoZWFkZXJzOiBnZXRIZWFkZXJzKG9wdHMpXG4gICAgfSksXG4gICAgKGUpID0+IHtcbiAgICAgIHJldHVybiBuZXcgQXV0aENsaWVudEVycm9yKFwidW5rbm93blwiLCBlKTtcbiAgICB9XG4gICkuYW5kVGhlbigocmVzcG9uc2UpID0+IHtcbiAgICByZXR1cm4gUmVzdWx0QXN5bmMuZnJvbVByb21pc2UocmVzcG9uc2UuanNvbigpLCAoZSkgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBBdXRoQ2xpZW50RXJyb3IoXCJ1bmtub3duXCIsIGUpO1xuICAgIH0pLmFuZFRoZW4oKGRhdGEpID0+IHtcbiAgICAgIHJldHVybiBvayh7IHJlc3BvbnNlLCBkYXRhIH0pO1xuICAgIH0pO1xuICB9KTtcbn07XG52YXIgcG9zdCA9IGFzeW5jIChjbGllbnQsIHBhdGg1LCBqc29uLCBvcHRzKSA9PiB7XG4gIHJldHVybiBSZXN1bHRBc3luYy5mcm9tUHJvbWlzZShcbiAgICBmZXRjaChnZXRVUkkoY2xpZW50LCBwYXRoNSksIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShqc29uKSxcbiAgICAgIGhlYWRlcnM6IGdldEhlYWRlcnMob3B0cylcbiAgICB9KSxcbiAgICAoZSkgPT4ge1xuICAgICAgcmV0dXJuIG5ldyBBdXRoQ2xpZW50RXJyb3IoXCJ1bmtub3duXCIsIGUpO1xuICAgIH1cbiAgKS5hbmRUaGVuKChyZXNwb25zZSkgPT4ge1xuICAgIHJldHVybiBSZXN1bHRBc3luYy5mcm9tUHJvbWlzZShyZXNwb25zZS5qc29uKCksIChlKSA9PiB7XG4gICAgICByZXR1cm4gbmV3IEF1dGhDbGllbnRFcnJvcihcInVua25vd25cIiwgZSk7XG4gICAgfSkuYW5kVGhlbigoZGF0YSkgPT4ge1xuICAgICAgcmV0dXJuIG9rKHsgcmVzcG9uc2UsIGRhdGEgfSk7XG4gICAgfSk7XG4gIH0pO1xufTtcbnZhciBwb2xsID0gYXN5bmMgKGNsaWVudCwgcGF0aDUsIHBvbGxPcHRzLCBvcHRzKSA9PiB7XG4gIGNvbnN0IHsgdGltZW91dCwgaW50ZXJ2YWwsIHN1Y2Nlc3NDb2RlLCBvblJlc3BvbnNlIH0gPSB7XG4gICAgLi4uZGVmYXVsdFBvbGxPcHRzLFxuICAgIC4uLnBvbGxPcHRzXG4gIH07XG4gIGNvbnN0IGRlYWRsaW5lID0gRGF0ZS5ub3coKSArIHRpbWVvdXQ7XG4gIHdoaWxlIChEYXRlLm5vdygpIDwgZGVhZGxpbmUpIHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBnZXQoY2xpZW50LCBwYXRoNSwgb3B0cyk7XG4gICAgaWYgKHJlcy5pc09rKCkpIHtcbiAgICAgIGNvbnN0IHsgcmVzcG9uc2UgfSA9IHJlcy52YWx1ZTtcbiAgICAgIG9uUmVzcG9uc2UocmVzLnZhbHVlKTtcbiAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IHN1Y2Nlc3NDb2RlKSB7XG4gICAgICAgIHJldHVybiBvayhyZXMudmFsdWUpO1xuICAgICAgfVxuICAgICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgaW50ZXJ2YWwpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGVycihyZXMuZXJyb3IpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gZXJyKG5ldyBBdXRoQ2xpZW50RXJyb3IoXCJ1bmF2YWlsYWJsZVwiLCBgUG9sbGluZyB0aW1lZCBvdXQgYWZ0ZXIgJHt0aW1lb3V0fW1zYCkpO1xufTtcbnZhciBnZXRVUkkgPSAoY2xpZW50LCBwYXRoNSkgPT4ge1xuICByZXR1cm4gYCR7Y2xpZW50LmNvbmZpZy5yZWxheX0vJHtjbGllbnQuY29uZmlnLnZlcnNpb259LyR7cGF0aDV9YDtcbn07XG52YXIgZ2V0SGVhZGVycyA9IChvcHRzKSA9PiB7XG4gIGNvbnN0IGhlYWRlcnMgPSB7XG4gICAgLi4ub3B0cz8uaGVhZGVyc1xuICB9O1xuICBpZiAob3B0cz8uYXV0aFRva2VuKSB7XG4gICAgaGVhZGVyc1tcIkF1dGhvcml6YXRpb25cIl0gPSBgQmVhcmVyICR7b3B0cy5hdXRoVG9rZW59YDtcbiAgfVxuICByZXR1cm4geyAuLi5oZWFkZXJzLCBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9O1xufTtcblxuLy8gc3JjL2FjdGlvbnMvYXBwL2NyZWF0ZUNoYW5uZWwudHNcbnZhciBwYXRoID0gXCJjaGFubmVsXCI7XG52YXIgY3JlYXRlQ2hhbm5lbCA9IGFzeW5jIChjbGllbnQsIHsgLi4ucmVxdWVzdCB9KSA9PiB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgcG9zdChjbGllbnQsIHBhdGgsIHJlcXVlc3QpO1xuICByZXR1cm4gdW53cmFwKHJlc3BvbnNlKTtcbn07XG5cbi8vIHNyYy9hY3Rpb25zL2FwcC9zdGF0dXMudHNcbnZhciBwYXRoMiA9IFwiY2hhbm5lbC9zdGF0dXNcIjtcbnZhciBzdGF0dXMgPSBhc3luYyAoY2xpZW50LCB7IGNoYW5uZWxUb2tlbiB9KSA9PiB7XG4gIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZ2V0KGNsaWVudCwgcGF0aDIsIHtcbiAgICBhdXRoVG9rZW46IGNoYW5uZWxUb2tlblxuICB9KTtcbiAgcmV0dXJuIHVud3JhcChyZXNwb25zZSk7XG59O1xuXG4vLyBzcmMvbWVzc2FnZXMvdmVyaWZ5LnRzXG5pbXBvcnQgeyBjcmVhdGVQdWJsaWNDbGllbnQsIGh0dHAgfSBmcm9tIFwidmllbVwiO1xuaW1wb3J0IHsgdmVyaWZ5U2l3ZU1lc3NhZ2UgYXMgdmVyaWZ5U2l3ZU1lc3NhZ2VWaWVtIH0gZnJvbSBcInZpZW0vc2l3ZVwiO1xuaW1wb3J0IHsgUmVzdWx0QXN5bmMgYXMgUmVzdWx0QXN5bmMyLCBlcnIgYXMgZXJyMywgb2sgYXMgb2szIH0gZnJvbSBcIm5ldmVydGhyb3dcIjtcblxuLy8gc3JjL21lc3NhZ2VzL3ZhbGlkYXRlLnRzXG5pbXBvcnQgeyB2YWxpZGF0ZVNpd2VNZXNzYWdlLCBwYXJzZVNpd2VNZXNzYWdlIH0gZnJvbSBcInZpZW0vc2l3ZVwiO1xuaW1wb3J0IHsgUmVzdWx0LCBlcnIgYXMgZXJyMiwgb2sgYXMgb2syIH0gZnJvbSBcIm5ldmVydGhyb3dcIjtcblxuLy8gc3JjL21lc3NhZ2VzL2NvbnN0YW50cy50c1xudmFyIFNUQVRFTUVOVCA9IFwiRmFyY2FzdGVyIEF1dGhcIjtcbnZhciBDSEFJTl9JRCA9IDEwO1xuXG4vLyBzcmMvbWVzc2FnZXMvdmFsaWRhdGUudHNcbnZhciBGSURfVVJJX1JFR0VYID0gL15mYXJjYXN0ZXI6XFwvXFwvZmlkXFwvKFsxLTldXFxkKilcXC8/JC87XG52YXIgdmFsaWRhdGUgPSAocGFyYW1zKSA9PiB7XG4gIHJldHVybiBSZXN1bHQuZnJvbVRocm93YWJsZShcbiAgICAoKSA9PiB7XG4gICAgICBjb25zdCBzaXdlTWVzc2FnZSA9ICgoKSA9PiB7XG4gICAgICAgIGlmICh0eXBlb2YgcGFyYW1zID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgICAgcmV0dXJuIHBhcnNlU2l3ZU1lc3NhZ2UocGFyYW1zKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcGFyYW1zO1xuICAgICAgfSkoKTtcbiAgICAgIGNvbnN0IGlzVmFsaWQgPSB2YWxpZGF0ZVNpd2VNZXNzYWdlKHsgbWVzc2FnZTogc2l3ZU1lc3NhZ2UgfSk7XG4gICAgICBpZiAoaXNWYWxpZCkge1xuICAgICAgICByZXR1cm4gc2l3ZU1lc3NhZ2U7XG4gICAgICB9XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIG1lc3NhZ2VcIik7XG4gICAgfSxcbiAgICAvLyBJZiBjb25zdHJ1Y3Rpb24gdGltZSB2YWxpZGF0aW9uIGZhaWxzLCBwcm9wYWdhdGUgdGhlIGVycm9yXG4gICAgKGUpID0+IG5ldyBBdXRoQ2xpZW50RXJyb3IoXCJiYWRfcmVxdWVzdC52YWxpZGF0aW9uX2ZhaWx1cmVcIiwgZSlcbiAgKSgpLmFuZFRoZW4odmFsaWRhdGVTdGF0ZW1lbnQpLmFuZFRoZW4odmFsaWRhdGVDaGFpbklkKS5hbmRUaGVuKHZhbGlkYXRlUmVzb3VyY2VzKTtcbn07XG52YXIgcGFyc2VSZXNvdXJjZXMgPSAobWVzc2FnZSkgPT4ge1xuICBjb25zdCBmaWQgPSBwYXJzZUZpZChtZXNzYWdlKTtcbiAgaWYgKGZpZC5pc0VycigpKVxuICAgIHJldHVybiBlcnIyKGZpZC5lcnJvcik7XG4gIHJldHVybiBvazIoeyBmaWQ6IGZpZC52YWx1ZSB9KTtcbn07XG52YXIgcGFyc2VGaWQgPSAobWVzc2FnZSkgPT4ge1xuICBjb25zdCByZXNvdXJjZSA9IChtZXNzYWdlLnJlc291cmNlcyA/PyBbXSkuZmluZCgocmVzb3VyY2UyKSA9PiB7XG4gICAgcmV0dXJuIEZJRF9VUklfUkVHRVgudGVzdChyZXNvdXJjZTIpO1xuICB9KTtcbiAgaWYgKCFyZXNvdXJjZSkge1xuICAgIHJldHVybiBlcnIyKG5ldyBBdXRoQ2xpZW50RXJyb3IoXCJiYWRfcmVxdWVzdC52YWxpZGF0aW9uX2ZhaWx1cmVcIiwgXCJObyBmaWQgcmVzb3VyY2UgcHJvdmlkZWRcIikpO1xuICB9XG4gIGNvbnN0IGZpZCA9IE51bWJlci5wYXJzZUludChyZXNvdXJjZS5tYXRjaChGSURfVVJJX1JFR0VYKT8uWzFdID8/IFwiXCIpO1xuICBpZiAoTnVtYmVyLmlzTmFOKGZpZCkpIHtcbiAgICByZXR1cm4gZXJyMihuZXcgQXV0aENsaWVudEVycm9yKFwiYmFkX3JlcXVlc3QudmFsaWRhdGlvbl9mYWlsdXJlXCIsIFwiSW52YWxpZCBmaWRcIikpO1xuICB9XG4gIHJldHVybiBvazIoZmlkKTtcbn07XG52YXIgdmFsaWRhdGVTdGF0ZW1lbnQgPSAobWVzc2FnZSkgPT4ge1xuICBjb25zdCB2YWxpZFN0YXRlbWVudCA9IG1lc3NhZ2Uuc3RhdGVtZW50ID09PSBTVEFURU1FTlQgfHwgbWVzc2FnZS5zdGF0ZW1lbnQgPT09IFwiRmFyY2FzdGVyIENvbm5lY3RcIjtcbiAgaWYgKCF2YWxpZFN0YXRlbWVudCkge1xuICAgIHJldHVybiBlcnIyKG5ldyBBdXRoQ2xpZW50RXJyb3IoXCJiYWRfcmVxdWVzdC52YWxpZGF0aW9uX2ZhaWx1cmVcIiwgYFN0YXRlbWVudCBtdXN0IGJlICcke1NUQVRFTUVOVH0nYCkpO1xuICB9XG4gIHJldHVybiBvazIobWVzc2FnZSk7XG59O1xudmFyIHZhbGlkYXRlQ2hhaW5JZCA9IChtZXNzYWdlKSA9PiB7XG4gIGlmIChtZXNzYWdlLmNoYWluSWQgIT09IENIQUlOX0lEKSB7XG4gICAgcmV0dXJuIGVycjIobmV3IEF1dGhDbGllbnRFcnJvcihcImJhZF9yZXF1ZXN0LnZhbGlkYXRpb25fZmFpbHVyZVwiLCBgQ2hhaW4gSUQgbXVzdCBiZSAke0NIQUlOX0lEfWApKTtcbiAgfVxuICByZXR1cm4gb2syKG1lc3NhZ2UpO1xufTtcbnZhciB2YWxpZGF0ZVJlc291cmNlcyA9IChtZXNzYWdlKSA9PiB7XG4gIGNvbnN0IGZpZFJlc291cmNlcyA9IChtZXNzYWdlLnJlc291cmNlcyA/PyBbXSkuZmlsdGVyKChyZXNvdXJjZSkgPT4ge1xuICAgIHJldHVybiBGSURfVVJJX1JFR0VYLnRlc3QocmVzb3VyY2UpO1xuICB9KTtcbiAgaWYgKGZpZFJlc291cmNlcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZXJyMihuZXcgQXV0aENsaWVudEVycm9yKFwiYmFkX3JlcXVlc3QudmFsaWRhdGlvbl9mYWlsdXJlXCIsIFwiTm8gZmlkIHJlc291cmNlIHByb3ZpZGVkXCIpKTtcbiAgfVxuICBpZiAoZmlkUmVzb3VyY2VzLmxlbmd0aCA+IDEpIHtcbiAgICByZXR1cm4gZXJyMihuZXcgQXV0aENsaWVudEVycm9yKFwiYmFkX3JlcXVlc3QudmFsaWRhdGlvbl9mYWlsdXJlXCIsIFwiTXVsdGlwbGUgZmlkIHJlc291cmNlcyBwcm92aWRlZFwiKSk7XG4gIH1cbiAgcmV0dXJuIG9rMihtZXNzYWdlKTtcbn07XG5cbi8vIHNyYy9tZXNzYWdlcy92ZXJpZnkudHNcbmltcG9ydCB7IG9wdGltaXNtIH0gZnJvbSBcInZpZW0vY2hhaW5zXCI7XG52YXIgZGVmYXVsdFB1YmxpY0NsaWVudCA9IGNyZWF0ZVB1YmxpY0NsaWVudCh7XG4gIGNoYWluOiBvcHRpbWlzbSxcbiAgdHJhbnNwb3J0OiBodHRwKClcbn0pO1xudmFyIHZvaWRHZXRGaWQgPSAoX2N1c3RvZHkpID0+IFByb21pc2UucmVqZWN0KG5ldyBFcnJvcihcIk5vdCBpbXBsZW1lbnRlZDogTXVzdCBwcm92aWRlIGFuIGZpZCB2ZXJpZmllclwiKSk7XG52YXIgdm9pZElzVmFsaWRBdXRoQWRkcmVzcyA9IChfY3VzdG9keSkgPT4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKFwiTm90IGltcGxlbWVudGVkOiBNdXN0IHByb3ZpZGUgYW4gYXV0aCBhZGRyZXNzIHZlcmlmaWVyXCIpKTtcbnZhciB2ZXJpZnkgPSBhc3luYyAobm9uY2UsIGRvbWFpbiwgbWVzc2FnZSwgc2lnbmF0dXJlLCBvcHRpb25zID0ge1xuICBhY2NlcHRBdXRoQWRkcmVzczogZmFsc2UsXG4gIGdldEZpZDogdm9pZEdldEZpZCxcbiAgaXNWYWxpZEF1dGhBZGRyZXNzOiB2b2lkSXNWYWxpZEF1dGhBZGRyZXNzXG59KSA9PiB7XG4gIGNvbnN0IHsgcHVibGljQ2xpZW50ID0gZGVmYXVsdFB1YmxpY0NsaWVudCB9ID0gb3B0aW9ucztcbiAgY29uc3QgdmFsaWQgPSB2YWxpZGF0ZShtZXNzYWdlKS5hbmRUaGVuKChtZXNzYWdlMikgPT4gdmFsaWRhdGVOb25jZShtZXNzYWdlMiwgbm9uY2UpKS5hbmRUaGVuKChtZXNzYWdlMikgPT4gdmFsaWRhdGVEb21haW4obWVzc2FnZTIsIGRvbWFpbikpO1xuICBpZiAodmFsaWQuaXNFcnIoKSlcbiAgICByZXR1cm4gZXJyMyh2YWxpZC5lcnJvcik7XG4gIGNvbnN0IHNpd2UgPSAoYXdhaXQgdmVyaWZ5U2l3ZU1lc3NhZ2UobWVzc2FnZSwgc2lnbmF0dXJlLCBwdWJsaWNDbGllbnQpKS5hbmRUaGVuKCgpID0+IG1lcmdlUmVzb3VyY2VzKHZhbGlkLnZhbHVlKSk7XG4gIGlmIChzaXdlLmlzRXJyKCkpXG4gICAgcmV0dXJuIGVycjMoc2l3ZS5lcnJvcik7XG4gIGNvbnN0IGF1dGggPSBhd2FpdCB2ZXJpZnlBdXRob3JpemVkU2lnbmVyKHNpd2UudmFsdWUsIG9wdGlvbnMpO1xuICBpZiAoYXV0aC5pc0VycigpKVxuICAgIHJldHVybiBlcnIzKGF1dGguZXJyb3IpO1xuICByZXR1cm4gb2szKGF1dGgudmFsdWUpO1xufTtcbnZhciB2YWxpZGF0ZU5vbmNlID0gKG1lc3NhZ2UsIG5vbmNlKSA9PiB7XG4gIGlmIChtZXNzYWdlLm5vbmNlICE9PSBub25jZSkge1xuICAgIHJldHVybiBlcnIzKG5ldyBBdXRoQ2xpZW50RXJyb3IoXCJ1bmF1dGhvcml6ZWRcIiwgXCJJbnZhbGlkIG5vbmNlXCIpKTtcbiAgfVxuICByZXR1cm4gb2szKG1lc3NhZ2UpO1xufTtcbnZhciB2YWxpZGF0ZURvbWFpbiA9IChtZXNzYWdlLCBkb21haW4pID0+IHtcbiAgaWYgKG1lc3NhZ2UuZG9tYWluICE9PSBkb21haW4pIHtcbiAgICByZXR1cm4gZXJyMyhuZXcgQXV0aENsaWVudEVycm9yKFwidW5hdXRob3JpemVkXCIsIFwiSW52YWxpZCBkb21haW5cIikpO1xuICB9XG4gIHJldHVybiBvazMobWVzc2FnZSk7XG59O1xudmFyIHZlcmlmeVNpd2VNZXNzYWdlID0gYXN5bmMgKG1lc3NhZ2UsIHNpZ25hdHVyZSwgY2xpZW50KSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgdmVyaWZpZWQgPSBhd2FpdCB2ZXJpZnlTaXdlTWVzc2FnZVZpZW0oY2xpZW50LCB7IG1lc3NhZ2UsIHNpZ25hdHVyZSB9KTtcbiAgICBpZiAodmVyaWZpZWQpIHtcbiAgICAgIHJldHVybiBvazModm9pZCAwKTtcbiAgICB9XG4gICAgcmV0dXJuIGVycjMobmV3IEF1dGhDbGllbnRFcnJvcihcInVuYXV0aG9yaXplZFwiLCBcIkZhaWxlZCB0byB2ZXJpZnkgbWVzc2FnZVwiKSk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gZXJyMyhuZXcgQXV0aENsaWVudEVycm9yKFwidW5rbm93blwiLCBlKSk7XG4gIH1cbn07XG52YXIgdmVyaWZ5QXV0aG9yaXplZFNpZ25lciA9IGFzeW5jIChyZXNwb25zZSwgb3B0aW9ucykgPT4ge1xuICBjb25zdCB7IGdldEZpZCwgaXNWYWxpZEF1dGhBZGRyZXNzLCBhY2NlcHRBdXRoQWRkcmVzcyB9ID0gb3B0aW9ucztcbiAgY29uc3Qgc2lnbmVyID0gcmVzcG9uc2UuZGF0YS5hZGRyZXNzO1xuICBpZiAoYWNjZXB0QXV0aEFkZHJlc3MpIHtcbiAgICBjb25zdCBhdXRoQWRkcmVzc1Jlc3VsdCA9IGF3YWl0IFJlc3VsdEFzeW5jMi5mcm9tUHJvbWlzZShcbiAgICAgIGlzVmFsaWRBdXRoQWRkcmVzcyhzaWduZXIsIEJpZ0ludChyZXNwb25zZS5maWQpKSxcbiAgICAgIChlKSA9PiBuZXcgQXV0aENsaWVudEVycm9yKFwidW5hdmFpbGFibGVcIiwgZSlcbiAgICApO1xuICAgIGlmIChhdXRoQWRkcmVzc1Jlc3VsdC5pc0VycigpKSB7XG4gICAgICByZXR1cm4gZXJyMyhhdXRoQWRkcmVzc1Jlc3VsdC5lcnJvcik7XG4gICAgfVxuICAgIGlmIChhdXRoQWRkcmVzc1Jlc3VsdC5pc09rKCkgJiYgYXV0aEFkZHJlc3NSZXN1bHQudmFsdWUgPT09IHRydWUpIHtcbiAgICAgIHJldHVybiBvazMoeyAuLi5yZXNwb25zZSwgYXV0aE1ldGhvZDogXCJhdXRoQWRkcmVzc1wiIH0pO1xuICAgIH1cbiAgICBjb25zdCBmaWRSZXN1bHQgPSBhd2FpdCBSZXN1bHRBc3luYzIuZnJvbVByb21pc2UoXG4gICAgICBnZXRGaWQoc2lnbmVyKSxcbiAgICAgIChlKSA9PiBuZXcgQXV0aENsaWVudEVycm9yKFwidW5hdmFpbGFibGVcIiwgZSlcbiAgICApO1xuICAgIGlmIChmaWRSZXN1bHQuaXNFcnIoKSkge1xuICAgICAgcmV0dXJuIGVycjMoZmlkUmVzdWx0LmVycm9yKTtcbiAgICB9XG4gICAgaWYgKGZpZFJlc3VsdC5pc09rKCkgJiYgZmlkUmVzdWx0LnZhbHVlICE9PSBCaWdJbnQocmVzcG9uc2UuZmlkKSkge1xuICAgICAgcmV0dXJuIGVycjMoXG4gICAgICAgIG5ldyBBdXRoQ2xpZW50RXJyb3IoXG4gICAgICAgICAgXCJ1bmF1dGhvcml6ZWRcIixcbiAgICAgICAgICBgSW52YWxpZCByZXNvdXJjZTogc2lnbmVyICR7c2lnbmVyfSBpcyBub3QgYW4gYXV0aCBhZGRyZXNzIG9yIG93bmVyIG9mIGZpZCAke3Jlc3BvbnNlLmZpZH0uYFxuICAgICAgICApXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gb2szKHsgLi4ucmVzcG9uc2UsIGF1dGhNZXRob2Q6IFwiY3VzdG9keVwiIH0pO1xuICB9XG4gIHJldHVybiBSZXN1bHRBc3luYzIuZnJvbVByb21pc2UoZ2V0RmlkKHNpZ25lciksIChlKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBBdXRoQ2xpZW50RXJyb3IoXCJ1bmF2YWlsYWJsZVwiLCBlKTtcbiAgfSkuYW5kVGhlbigoZmlkKSA9PiB7XG4gICAgaWYgKGZpZCAhPT0gQmlnSW50KHJlc3BvbnNlLmZpZCkpIHtcbiAgICAgIHJldHVybiBlcnIzKFxuICAgICAgICBuZXcgQXV0aENsaWVudEVycm9yKFwidW5hdXRob3JpemVkXCIsIGBJbnZhbGlkIHJlc291cmNlOiBzaWduZXIgJHtzaWduZXJ9IGRvZXMgbm90IG93biBmaWQgJHtyZXNwb25zZS5maWR9LmApXG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gb2szKHsgLi4ucmVzcG9uc2UsIGF1dGhNZXRob2Q6IFwiY3VzdG9keVwiIH0pO1xuICB9KTtcbn07XG52YXIgbWVyZ2VSZXNvdXJjZXMgPSAobWVzc2FnZSkgPT4ge1xuICByZXR1cm4gcGFyc2VSZXNvdXJjZXMobWVzc2FnZSkuYW5kVGhlbigocmVzb3VyY2VzKSA9PiB7XG4gICAgcmV0dXJuIG9rMyh7IC4uLnJlc291cmNlcywgZGF0YTogbWVzc2FnZSwgc3VjY2VzczogdHJ1ZSB9KTtcbiAgfSk7XG59O1xuXG4vLyBzcmMvYWN0aW9ucy9hcHAvdmVyaWZ5U2lnbkluTWVzc2FnZS50c1xudmFyIHZlcmlmeVNpZ25Jbk1lc3NhZ2UgPSBhc3luYyAoY2xpZW50LCB7IG5vbmNlLCBkb21haW4sIG1lc3NhZ2UsIHNpZ25hdHVyZSwgYWNjZXB0QXV0aEFkZHJlc3MgPSB0cnVlIH0pID0+IHtcbiAgY29uc3QgcmVzdWx0ID0gYXdhaXQgdmVyaWZ5KG5vbmNlLCBkb21haW4sIG1lc3NhZ2UsIHNpZ25hdHVyZSwge1xuICAgIGFjY2VwdEF1dGhBZGRyZXNzLFxuICAgIGdldEZpZDogY2xpZW50LmV0aGVyZXVtLmdldEZpZCxcbiAgICBpc1ZhbGlkQXV0aEFkZHJlc3M6IGNsaWVudC5ldGhlcmV1bS5pc1ZhbGlkQXV0aEFkZHJlc3MsXG4gICAgcHVibGljQ2xpZW50OiBjbGllbnQuZXRoZXJldW0ucHVibGljQ2xpZW50XG4gIH0pO1xuICByZXR1cm4gdW53cmFwKHJlc3VsdCk7XG59O1xuXG4vLyBzcmMvYWN0aW9ucy9hcHAvd2F0Y2hTdGF0dXMudHNcbnZhciBwYXRoMyA9IFwiY2hhbm5lbC9zdGF0dXNcIjtcbnZhciB2b2lkQ2FsbGJhY2sgPSAoKSA9PiB7XG59O1xudmFyIHdhdGNoU3RhdHVzID0gYXN5bmMgKGNsaWVudCwgYXJncykgPT4ge1xuICBjb25zdCByZXN1bHQgPSBhd2FpdCBwb2xsKFxuICAgIGNsaWVudCxcbiAgICBwYXRoMyxcbiAgICB7XG4gICAgICB0aW1lb3V0OiBhcmdzPy50aW1lb3V0ID8/IDNlNSxcbiAgICAgIGludGVydmFsOiBhcmdzPy5pbnRlcnZhbCA/PyAxZTMsXG4gICAgICBvblJlc3BvbnNlOiBhcmdzPy5vblJlc3BvbnNlID8/IHZvaWRDYWxsYmFja1xuICAgIH0sXG4gICAgeyBhdXRoVG9rZW46IGFyZ3MuY2hhbm5lbFRva2VuIH1cbiAgKTtcbiAgcmV0dXJuIHVud3JhcChyZXN1bHQpO1xufTtcblxuLy8gc3JjL2FjdGlvbnMvYXV0aC9hdXRoZW50aWNhdGUudHNcbnZhciBwYXRoNCA9IFwiY2hhbm5lbC9hdXRoZW50aWNhdGVcIjtcbnZhciBhdXRoZW50aWNhdGUgPSBhc3luYyAoY2xpZW50LCB7IGNoYW5uZWxUb2tlbiwgYXV0aEtleSwgLi4ucmVxdWVzdCB9KSA9PiB7XG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHBvc3QoY2xpZW50LCBwYXRoNCwgcmVxdWVzdCwge1xuICAgIGF1dGhUb2tlbjogY2hhbm5lbFRva2VuLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIFwiWC1GYXJjYXN0ZXItQXV0aC1SZWxheS1LZXlcIjogYXV0aEtleVxuICAgIH1cbiAgfSk7XG4gIHJldHVybiB1bndyYXAocmVzdWx0KTtcbn07XG5cbi8vIHNyYy9tZXNzYWdlcy9idWlsZC50c1xuaW1wb3J0IHsgZXJyIGFzIGVycjQsIG9rIGFzIG9rNCB9IGZyb20gXCJuZXZlcnRocm93XCI7XG5pbXBvcnQgeyBjcmVhdGVTaXdlTWVzc2FnZSB9IGZyb20gXCJ2aWVtL3Npd2VcIjtcbnZhciBidWlsZCA9IChwYXJhbXMpID0+IHtcbiAgY29uc3QgeyBmaWQsIC4uLnNpd2VQYXJhbXMgfSA9IHBhcmFtcztcbiAgY29uc3QgcmVzb3VyY2VzID0gc2l3ZVBhcmFtcy5yZXNvdXJjZXMgPz8gW107XG4gIHNpd2VQYXJhbXMudmVyc2lvbiA9IFwiMVwiO1xuICBzaXdlUGFyYW1zLnN0YXRlbWVudCA9IFNUQVRFTUVOVDtcbiAgc2l3ZVBhcmFtcy5jaGFpbklkID0gQ0hBSU5fSUQ7XG4gIHNpd2VQYXJhbXMuaXNzdWVkQXQgPSAvKiBAX19QVVJFX18gKi8gbmV3IERhdGUoKTtcbiAgc2l3ZVBhcmFtcy5yZXNvdXJjZXMgPSBbYnVpbGRGaWRSZXNvdXJjZShmaWQpLCAuLi5yZXNvdXJjZXNdO1xuICBjb25zdCB2YWxpZCA9IHZhbGlkYXRlKHNpd2VQYXJhbXMpO1xuICBpZiAodmFsaWQuaXNFcnIoKSlcbiAgICByZXR1cm4gZXJyNCh2YWxpZC5lcnJvcik7XG4gIGNvbnN0IHNpd2VNZXNzYWdlID0gdmFsaWQudmFsdWU7XG4gIHJldHVybiBvazQoeyBzaXdlTWVzc2FnZSwgbWVzc2FnZTogY3JlYXRlU2l3ZU1lc3NhZ2Uoc2l3ZU1lc3NhZ2UpIH0pO1xufTtcbnZhciBidWlsZEZpZFJlc291cmNlID0gKGZpZCkgPT4ge1xuICByZXR1cm4gYGZhcmNhc3RlcjovL2ZpZC8ke2ZpZH1gO1xufTtcblxuLy8gc3JjL2FjdGlvbnMvYXV0aC9idWlsZFNpZ25Jbk1lc3NhZ2UudHNcbnZhciBidWlsZFNpZ25Jbk1lc3NhZ2UgPSAoX2NsaWVudCwgYXJncykgPT4ge1xuICByZXR1cm4gdW53cmFwKGJ1aWxkKGFyZ3MpKTtcbn07XG5cbi8vIHNyYy9tZXNzYWdlcy9wYXJzZVNpZ25JblVSSS50c1xuaW1wb3J0IHsgZXJyIGFzIGVycjUsIG9rIGFzIG9rNSB9IGZyb20gXCJuZXZlcnRocm93XCI7XG52YXIgcGFyc2VTaWduSW5VUkkgPSAoc2lnbkluVXJpKSA9PiB7XG4gIGNvbnN0IHVybCA9IG5ldyBVUkwoc2lnbkluVXJpKTtcbiAgY29uc3Qgc2VhcmNoUGFyYW1zID0gT2JqZWN0LmZyb21FbnRyaWVzKHVybC5zZWFyY2hQYXJhbXMuZW50cmllcygpKTtcbiAgY29uc3QgeyBjaGFubmVsVG9rZW4gfSA9IHNlYXJjaFBhcmFtcztcbiAgaWYgKCFjaGFubmVsVG9rZW4pIHtcbiAgICByZXR1cm4gZXJyNSh2YWxpZGF0aW9uRmFpbChcIk5vIGNoYW5uZWwgdG9rZW4gcHJvdmlkZWRcIikpO1xuICB9XG4gIHJldHVybiBvazUoeyBjaGFubmVsVG9rZW4gfSk7XG59O1xudmFyIHZhbGlkYXRpb25GYWlsID0gKG1lc3NhZ2UpID0+IHtcbiAgcmV0dXJuIG5ldyBBdXRoQ2xpZW50RXJyb3IoXCJiYWRfcmVxdWVzdC52YWxpZGF0aW9uX2ZhaWx1cmVcIiwgbWVzc2FnZSk7XG59O1xuXG4vLyBzcmMvYWN0aW9ucy9hdXRoL3BhcnNlU2lnbkluVVJJLnRzXG52YXIgcGFyc2VTaWduSW5VUkkyID0gKF9jbGllbnQsIHsgdXJpIH0pID0+IHtcbiAgcmV0dXJuIHVud3JhcChwYXJzZVNpZ25JblVSSSh1cmkpKTtcbn07XG5cbi8vIHNyYy9jbGllbnRzL2NyZWF0ZUNsaWVudC50c1xudmFyIGNvbmZpZ0RlZmF1bHRzID0ge1xuICByZWxheTogXCJodHRwczovL3JlbGF5LmZhcmNhc3Rlci54eXpcIixcbiAgdmVyc2lvbjogXCJ2MVwiXG59O1xudmFyIGNyZWF0ZUNsaWVudCA9ICh7IGV0aGVyZXVtLCAuLi5jb25maWcgfSkgPT4ge1xuICByZXR1cm4ge1xuICAgIGNvbmZpZzogeyAuLi5jb25maWdEZWZhdWx0cywgLi4uY29uZmlnIH0sXG4gICAgZXRoZXJldW1cbiAgfTtcbn07XG5cbi8vIHNyYy9jbGllbnRzL2NyZWF0ZUFwcENsaWVudC50c1xudmFyIGNyZWF0ZUFwcENsaWVudCA9IChjb25maWcpID0+IHtcbiAgY29uc3QgY2xpZW50ID0gY3JlYXRlQ2xpZW50KGNvbmZpZyk7XG4gIHJldHVybiB7XG4gICAgLi4uY2xpZW50LFxuICAgIGNyZWF0ZUNoYW5uZWw6IChhcmdzKSA9PiBjcmVhdGVDaGFubmVsKGNsaWVudCwgYXJncyksXG4gICAgc3RhdHVzOiAoYXJncykgPT4gc3RhdHVzKGNsaWVudCwgYXJncyksXG4gICAgd2F0Y2hTdGF0dXM6IChhcmdzKSA9PiB3YXRjaFN0YXR1cyhjbGllbnQsIGFyZ3MpLFxuICAgIHZlcmlmeVNpZ25Jbk1lc3NhZ2U6IChhcmdzKSA9PiB2ZXJpZnlTaWduSW5NZXNzYWdlKGNsaWVudCwgYXJncylcbiAgfTtcbn07XG5cbi8vIHNyYy9jbGllbnRzL2NyZWF0ZVdhbGxldENsaWVudC50c1xudmFyIGNyZWF0ZVdhbGxldENsaWVudCA9IChjb25maWcpID0+IHtcbiAgY29uc3QgY2xpZW50ID0gY3JlYXRlQ2xpZW50KGNvbmZpZyk7XG4gIHJldHVybiB7XG4gICAgLi4uY2xpZW50LFxuICAgIGF1dGhlbnRpY2F0ZTogKGFyZ3MpID0+IGF1dGhlbnRpY2F0ZShjbGllbnQsIGFyZ3MpLFxuICAgIGJ1aWxkU2lnbkluTWVzc2FnZTogKGFyZ3MpID0+IGJ1aWxkU2lnbkluTWVzc2FnZShjbGllbnQsIGFyZ3MpLFxuICAgIHBhcnNlU2lnbkluVVJJOiAoYXJncykgPT4gcGFyc2VTaWduSW5VUkkyKGNsaWVudCwgYXJncylcbiAgfTtcbn07XG5cbi8vIHNyYy9jbGllbnRzL2V0aGVyZXVtL3ZpZW1Db25uZWN0b3IudHNcbmltcG9ydCB7IGNyZWF0ZVB1YmxpY0NsaWVudCBhcyBjcmVhdGVQdWJsaWNDbGllbnQyLCBlbmNvZGVBYmlQYXJhbWV0ZXJzLCBodHRwIGFzIGh0dHAyLCBmYWxsYmFjayB9IGZyb20gXCJ2aWVtXCI7XG5pbXBvcnQgeyBvcHRpbWlzbSBhcyBvcHRpbWlzbTIgfSBmcm9tIFwidmllbS9jaGFpbnNcIjtcblxuLy8gc3JjL2NvbnRyYWN0cy9pZFJlZ2lzdHJ5LnRzXG52YXIgaWRSZWdpc3RyeUFCSSA9IFtcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIl9taWdyYXRvclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJfaW5pdGlhbE93bmVyXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiY29uc3RydWN0b3JcIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcIkFscmVhZHlNaWdyYXRlZFwiLFxuICAgIHR5cGU6IFwiZXJyb3JcIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcIkdhdGV3YXlGcm96ZW5cIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJIYXNJZFwiLFxuICAgIHR5cGU6IFwiZXJyb3JcIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcIkhhc05vSWRcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcImFjY291bnRcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiY3VycmVudE5vbmNlXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIkludmFsaWRBY2NvdW50Tm9uY2VcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJJbnZhbGlkU2hvcnRTdHJpbmdcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJJbnZhbGlkU2lnbmF0dXJlXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiT25seUd1YXJkaWFuXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiT25seU1pZ3JhdG9yXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiUGVybWlzc2lvblJldm9rZWRcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJTaWduYXR1cmVFeHBpcmVkXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInN0cmluZ1wiLFxuICAgICAgICBuYW1lOiBcInN0clwiLFxuICAgICAgICB0eXBlOiBcInN0cmluZ1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIlN0cmluZ1Rvb0xvbmdcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJVbmF1dGhvcml6ZWRcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGFub255bW91czogZmFsc2UsXG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiZ3VhcmRpYW5cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiQWRkXCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcImZpZFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJBZG1pblJlc2V0XCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcImlkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcInJlY292ZXJ5XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIkNoYW5nZVJlY292ZXJ5QWRkcmVzc1wiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiRUlQNzEyRG9tYWluQ2hhbmdlZFwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiaWRHYXRld2F5XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIkZyZWV6ZUlkR2F0ZXdheVwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJtaWdyYXRlZEF0XCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIk1pZ3JhdGVkXCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcInByZXZpb3VzT3duZXJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwibmV3T3duZXJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiT3duZXJzaGlwVHJhbnNmZXJTdGFydGVkXCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcInByZXZpb3VzT3duZXJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwibmV3T3duZXJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiT3duZXJzaGlwVHJhbnNmZXJyZWRcIixcbiAgICB0eXBlOiBcImV2ZW50XCJcbiAgfSxcbiAge1xuICAgIGFub255bW91czogZmFsc2UsXG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IGZhbHNlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcImFjY291bnRcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiUGF1c2VkXCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcImZyb21cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwidG9cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiaWRcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiUmVjb3ZlclwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJ0b1wiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJpZFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwicmVjb3ZlcnlcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiUmVnaXN0ZXJcIixcbiAgICB0eXBlOiBcImV2ZW50XCJcbiAgfSxcbiAge1xuICAgIGFub255bW91czogZmFsc2UsXG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiZ3VhcmRpYW5cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiUmVtb3ZlXCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJvbGRDb3VudGVyXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJuZXdDb3VudGVyXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIlNldElkQ291bnRlclwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwib2xkSWRHYXRld2F5XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJuZXdJZEdhdGV3YXlcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiU2V0SWRHYXRld2F5XCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJvbGRNaWdyYXRvclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwibmV3TWlncmF0b3JcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiU2V0TWlncmF0b3JcIixcbiAgICB0eXBlOiBcImV2ZW50XCJcbiAgfSxcbiAge1xuICAgIGFub255bW91czogZmFsc2UsXG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiZnJvbVwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJ0b1wiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJpZFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJUcmFuc2ZlclwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiYWNjb3VudFwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJVbnBhdXNlZFwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcIkNIQU5HRV9SRUNPVkVSWV9BRERSRVNTX1RZUEVIQVNIXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJUUkFOU0ZFUl9BTkRfQ0hBTkdFX1JFQ09WRVJZX1RZUEVIQVNIXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJUUkFOU0ZFUl9UWVBFSEFTSFwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiVkVSU0lPTlwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInN0cmluZ1wiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcInN0cmluZ1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcImFjY2VwdE93bmVyc2hpcFwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJndWFyZGlhblwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJhZGRHdWFyZGlhblwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgY29tcG9uZW50czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjRcIixcbiAgICAgICAgICAgIG5hbWU6IFwiZmlkXCIsXG4gICAgICAgICAgICB0eXBlOiBcInVpbnQyNFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICAgICAgbmFtZTogXCJjdXN0b2R5XCIsXG4gICAgICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgIG5hbWU6IFwicmVjb3ZlcnlcIixcbiAgICAgICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwic3RydWN0IElJZFJlZ2lzdHJ5LkJ1bGtSZWdpc3RlckRhdGFbXVwiLFxuICAgICAgICBuYW1lOiBcImlkc1wiLFxuICAgICAgICB0eXBlOiBcInR1cGxlW11cIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJidWxrUmVnaXN0ZXJJZHNcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGNvbXBvbmVudHM6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI0XCIsXG4gICAgICAgICAgICBuYW1lOiBcImZpZFwiLFxuICAgICAgICAgICAgdHlwZTogXCJ1aW50MjRcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgICAgIG5hbWU6IFwiY3VzdG9keVwiLFxuICAgICAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIGludGVybmFsVHlwZTogXCJzdHJ1Y3QgSUlkUmVnaXN0cnkuQnVsa1JlZ2lzdGVyRGVmYXVsdFJlY292ZXJ5RGF0YVtdXCIsXG4gICAgICAgIG5hbWU6IFwiaWRzXCIsXG4gICAgICAgIHR5cGU6IFwidHVwbGVbXVwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcInJlY292ZXJ5XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImJ1bGtSZWdpc3Rlcklkc1dpdGhEZWZhdWx0UmVjb3ZlcnlcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjRbXVwiLFxuICAgICAgICBuYW1lOiBcImlkc1wiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNFtdXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiYnVsa1Jlc2V0SWRzXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcInJlY292ZXJ5XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImNoYW5nZVJlY292ZXJ5QWRkcmVzc1wiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJvd25lclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJyZWNvdmVyeVwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJkZWFkbGluZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgIG5hbWU6IFwic2lnXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXNcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJjaGFuZ2VSZWNvdmVyeUFkZHJlc3NGb3JcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiZmlkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImN1c3RvZHlPZlwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJjdXN0b2R5XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcImRvbWFpblNlcGFyYXRvclY0XCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJlaXA3MTJEb21haW5cIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlczFcIixcbiAgICAgICAgbmFtZTogXCJmaWVsZHNcIixcbiAgICAgICAgdHlwZTogXCJieXRlczFcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInN0cmluZ1wiLFxuICAgICAgICBuYW1lOiBcIm5hbWVcIixcbiAgICAgICAgdHlwZTogXCJzdHJpbmdcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInN0cmluZ1wiLFxuICAgICAgICBuYW1lOiBcInZlcnNpb25cIixcbiAgICAgICAgdHlwZTogXCJzdHJpbmdcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJjaGFpbklkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcInZlcmlmeWluZ0NvbnRyYWN0XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcInNhbHRcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2W11cIixcbiAgICAgICAgbmFtZTogXCJleHRlbnNpb25zXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NltdXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiZnJlZXplSWRHYXRld2F5XCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJnYXRld2F5RnJvemVuXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYm9vbFwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImJvb2xcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJncmFjZVBlcmlvZFwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNFwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNFwiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiZ3VhcmRpYW5cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiZ3VhcmRpYW5zXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYm9vbFwiLFxuICAgICAgICBuYW1lOiBcImlzR3VhcmRpYW5cIixcbiAgICAgICAgdHlwZTogXCJib29sXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgbmFtZTogXCJzdHJ1Y3RIYXNoXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXMzMlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImhhc2hUeXBlZERhdGFWNFwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiaWRDb3VudGVyXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJpZEdhdGV3YXlcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwib3duZXJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiaWRPZlwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJmaWRcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiaXNNaWdyYXRlZFwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJvb2xcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJib29sXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwibWlncmF0ZVwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwibWlncmF0ZWRBdFwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQ0MFwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcInVpbnQ0MFwiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcIm1pZ3JhdG9yXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJuYW1lXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwic3RyaW5nXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJvd25lclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJub25jZXNcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcIm93bmVyXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJwYXVzZVwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwicGF1c2VkXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYm9vbFwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImJvb2xcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJwZW5kaW5nT3duZXJcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiZnJvbVwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJ0b1wiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJkZWFkbGluZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgIG5hbWU6IFwic2lnXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXNcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJyZWNvdmVyXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcImZyb21cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwidG9cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwicmVjb3ZlcnlEZWFkbGluZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgIG5hbWU6IFwicmVjb3ZlcnlTaWdcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcInRvRGVhZGxpbmVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlc1wiLFxuICAgICAgICBuYW1lOiBcInRvU2lnXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXNcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJyZWNvdmVyRm9yXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcImZpZFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJyZWNvdmVyeU9mXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcInJlY292ZXJ5XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwidG9cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwicmVjb3ZlcnlcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwicmVnaXN0ZXJcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiZmlkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiZ3VhcmRpYW5cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwicmVtb3ZlR3VhcmRpYW5cIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcInJlbm91bmNlT3duZXJzaGlwXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcIl9jb3VudGVyXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcInNldElkQ291bnRlclwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJfaWRHYXRld2F5XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcInNldElkR2F0ZXdheVwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJfbWlncmF0b3JcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwic2V0TWlncmF0b3JcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwidG9cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiZGVhZGxpbmVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlc1wiLFxuICAgICAgICBuYW1lOiBcInNpZ1wiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwidHJhbnNmZXJcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwidG9cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwicmVjb3ZlcnlcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiZGVhZGxpbmVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlc1wiLFxuICAgICAgICBuYW1lOiBcInNpZ1wiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwidHJhbnNmZXJBbmRDaGFuZ2VSZWNvdmVyeVwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJmcm9tXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcInRvXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcInJlY292ZXJ5XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcImZyb21EZWFkbGluZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgIG5hbWU6IFwiZnJvbVNpZ1wiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwidG9EZWFkbGluZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgIG5hbWU6IFwidG9TaWdcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcInRyYW5zZmVyQW5kQ2hhbmdlUmVjb3ZlcnlGb3JcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiZnJvbVwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJ0b1wiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJmcm9tRGVhZGxpbmVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlc1wiLFxuICAgICAgICBuYW1lOiBcImZyb21TaWdcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcInRvRGVhZGxpbmVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlc1wiLFxuICAgICAgICBuYW1lOiBcInRvU2lnXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXNcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJ0cmFuc2ZlckZvclwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJuZXdPd25lclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJ0cmFuc2Zlck93bmVyc2hpcFwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwidW5wYXVzZVwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwidXNlTm9uY2VcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiY3VzdG9keUFkZHJlc3NcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiZmlkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcImRpZ2VzdFwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgIG5hbWU6IFwic2lnXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXNcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJ2ZXJpZnlGaWRTaWduYXR1cmVcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJib29sXCIsXG4gICAgICAgIG5hbWU6IFwiaXNWYWxpZFwiLFxuICAgICAgICB0eXBlOiBcImJvb2xcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfVxuXTtcbnZhciBJRF9SRUdJU1RSWV9BRERSRVNTID0gXCIweDAwMDAwMDAwRmM2YzVGMDFGYzMwMTUxOTk5Mzg3QmI5OUE5ZjQ4OWJcIjtcblxuLy8gc3JjL2NvbnRyYWN0cy9rZXlSZWdpc3RyeS50c1xudmFyIGtleVJlZ2lzdHJ5QUJJID0gW1xuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiX2lkUmVnaXN0cnlcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiX21pZ3JhdG9yXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIl9pbml0aWFsT3duZXJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiX21heEtleXNQZXJGaWRcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJjb25zdHJ1Y3RvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiQWxyZWFkeU1pZ3JhdGVkXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiRXhjZWVkc01heGltdW1cIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJHYXRld2F5RnJvemVuXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJhY2NvdW50XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcImN1cnJlbnROb25jZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJJbnZhbGlkQWNjb3VudE5vbmNlXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiSW52YWxpZEtleVR5cGVcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJJbnZhbGlkTWF4S2V5c1wiLFxuICAgIHR5cGU6IFwiZXJyb3JcIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcIkludmFsaWRNZXRhZGF0YVwiLFxuICAgIHR5cGU6IFwiZXJyb3JcIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcIkludmFsaWRNZXRhZGF0YVR5cGVcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJJbnZhbGlkU2hvcnRTdHJpbmdcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJJbnZhbGlkU2lnbmF0dXJlXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiSW52YWxpZFN0YXRlXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiT25seUd1YXJkaWFuXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiT25seU1pZ3JhdG9yXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiUGVybWlzc2lvblJldm9rZWRcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJTaWduYXR1cmVFeHBpcmVkXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInN0cmluZ1wiLFxuICAgICAgICBuYW1lOiBcInN0clwiLFxuICAgICAgICB0eXBlOiBcInN0cmluZ1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIlN0cmluZ1Rvb0xvbmdcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJVbmF1dGhvcml6ZWRcIixcbiAgICB0eXBlOiBcImVycm9yXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDMyXCIsXG4gICAgICAgIG5hbWU6IFwia2V5VHlwZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQzMlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDhcIixcbiAgICAgICAgbmFtZTogXCJtZXRhZGF0YVR5cGVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50OFwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIlZhbGlkYXRvck5vdEZvdW5kXCIsXG4gICAgdHlwZTogXCJlcnJvclwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcImZpZFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQzMlwiLFxuICAgICAgICBuYW1lOiBcImtleVR5cGVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MzJcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgIG5hbWU6IFwia2V5XCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXNcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlc1wiLFxuICAgICAgICBuYW1lOiBcImtleUJ5dGVzXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXNcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50OFwiLFxuICAgICAgICBuYW1lOiBcIm1ldGFkYXRhVHlwZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQ4XCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IGZhbHNlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgbmFtZTogXCJtZXRhZGF0YVwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiQWRkXCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcImd1YXJkaWFuXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIkFkZFwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJmaWRcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlc1wiLFxuICAgICAgICBuYW1lOiBcImtleVwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IGZhbHNlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgbmFtZTogXCJrZXlCeXRlc1wiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiQWRtaW5SZXNldFwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiRUlQNzEyRG9tYWluQ2hhbmdlZFwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwia2V5R2F0ZXdheVwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJGcmVlemVLZXlHYXRld2F5XCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcIm1pZ3JhdGVkQXRcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiTWlncmF0ZWRcIixcbiAgICB0eXBlOiBcImV2ZW50XCJcbiAgfSxcbiAge1xuICAgIGFub255bW91czogZmFsc2UsXG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwicHJldmlvdXNPd25lclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJuZXdPd25lclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJPd25lcnNoaXBUcmFuc2ZlclN0YXJ0ZWRcIixcbiAgICB0eXBlOiBcImV2ZW50XCJcbiAgfSxcbiAge1xuICAgIGFub255bW91czogZmFsc2UsXG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwicHJldmlvdXNPd25lclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJuZXdPd25lclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJPd25lcnNoaXBUcmFuc2ZlcnJlZFwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiYWNjb3VudFwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJQYXVzZWRcIixcbiAgICB0eXBlOiBcImV2ZW50XCJcbiAgfSxcbiAge1xuICAgIGFub255bW91czogZmFsc2UsXG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IHRydWUsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiZmlkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbmRleGVkOiB0cnVlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgbmFtZTogXCJrZXlcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgIG5hbWU6IFwia2V5Qnl0ZXNcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIlJlbW92ZVwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogdHJ1ZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJndWFyZGlhblwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJSZW1vdmVcIixcbiAgICB0eXBlOiBcImV2ZW50XCJcbiAgfSxcbiAge1xuICAgIGFub255bW91czogZmFsc2UsXG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IGZhbHNlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIm9sZElkUmVnaXN0cnlcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IGZhbHNlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIm5ld0lkUmVnaXN0cnlcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiU2V0SWRSZWdpc3RyeVwiLFxuICAgIHR5cGU6IFwiZXZlbnRcIlxuICB9LFxuICB7XG4gICAgYW5vbnltb3VzOiBmYWxzZSxcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwib2xkS2V5R2F0ZXdheVwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwibmV3S2V5R2F0ZXdheVwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJTZXRLZXlHYXRld2F5XCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJvbGRNYXhcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IGZhbHNlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcIm5ld01heFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJTZXRNYXhLZXlzUGVyRmlkXCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJvbGRNaWdyYXRvclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwibmV3TWlncmF0b3JcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiU2V0TWlncmF0b3JcIixcbiAgICB0eXBlOiBcImV2ZW50XCJcbiAgfSxcbiAge1xuICAgIGFub255bW91czogZmFsc2UsXG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGluZGV4ZWQ6IGZhbHNlLFxuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDMyXCIsXG4gICAgICAgIG5hbWU6IFwia2V5VHlwZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQzMlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQ4XCIsXG4gICAgICAgIG5hbWU6IFwibWV0YWRhdGFUeXBlXCIsXG4gICAgICAgIHR5cGU6IFwidWludDhcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW5kZXhlZDogZmFsc2UsXG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwib2xkVmFsaWRhdG9yXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJuZXdWYWxpZGF0b3JcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiU2V0VmFsaWRhdG9yXCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBhbm9ueW1vdXM6IGZhbHNlLFxuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbmRleGVkOiBmYWxzZSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJhY2NvdW50XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcIlVucGF1c2VkXCIsXG4gICAgdHlwZTogXCJldmVudFwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiUkVNT1ZFX1RZUEVIQVNIXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJWRVJTSU9OXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwic3RyaW5nXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwic3RyaW5nXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiYWNjZXB0T3duZXJzaGlwXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcImZpZE93bmVyXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDMyXCIsXG4gICAgICAgIG5hbWU6IFwia2V5VHlwZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQzMlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgbmFtZTogXCJrZXlcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDhcIixcbiAgICAgICAgbmFtZTogXCJtZXRhZGF0YVR5cGVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50OFwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgbmFtZTogXCJtZXRhZGF0YVwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwiYWRkXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcImd1YXJkaWFuXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImFkZEd1YXJkaWFuXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBjb21wb25lbnRzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgICAgIG5hbWU6IFwiZmlkXCIsXG4gICAgICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgY29tcG9uZW50czogW1xuICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgICAgICAgICAgbmFtZTogXCJrZXlcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImJ5dGVzXCJcbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGludGVybmFsVHlwZTogXCJieXRlc1wiLFxuICAgICAgICAgICAgICAgIG5hbWU6IFwibWV0YWRhdGFcIixcbiAgICAgICAgICAgICAgICB0eXBlOiBcImJ5dGVzXCJcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIGludGVybmFsVHlwZTogXCJzdHJ1Y3QgSUtleVJlZ2lzdHJ5LkJ1bGtBZGRLZXlbXVwiLFxuICAgICAgICAgICAgbmFtZTogXCJrZXlzXCIsXG4gICAgICAgICAgICB0eXBlOiBcInR1cGxlW11cIlxuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInN0cnVjdCBJS2V5UmVnaXN0cnkuQnVsa0FkZERhdGFbXVwiLFxuICAgICAgICBuYW1lOiBcIml0ZW1zXCIsXG4gICAgICAgIHR5cGU6IFwidHVwbGVbXVwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImJ1bGtBZGRLZXlzRm9yTWlncmF0aW9uXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBjb21wb25lbnRzOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgICAgIG5hbWU6IFwiZmlkXCIsXG4gICAgICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzW11cIixcbiAgICAgICAgICAgIG5hbWU6IFwia2V5c1wiLFxuICAgICAgICAgICAgdHlwZTogXCJieXRlc1tdXCJcbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIGludGVybmFsVHlwZTogXCJzdHJ1Y3QgSUtleVJlZ2lzdHJ5LkJ1bGtSZXNldERhdGFbXVwiLFxuICAgICAgICBuYW1lOiBcIml0ZW1zXCIsXG4gICAgICAgIHR5cGU6IFwidHVwbGVbXVwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImJ1bGtSZXNldEtleXNGb3JNaWdyYXRpb25cIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcImRvbWFpblNlcGFyYXRvclY0XCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJlaXA3MTJEb21haW5cIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlczFcIixcbiAgICAgICAgbmFtZTogXCJmaWVsZHNcIixcbiAgICAgICAgdHlwZTogXCJieXRlczFcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInN0cmluZ1wiLFxuICAgICAgICBuYW1lOiBcIm5hbWVcIixcbiAgICAgICAgdHlwZTogXCJzdHJpbmdcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInN0cmluZ1wiLFxuICAgICAgICBuYW1lOiBcInZlcnNpb25cIixcbiAgICAgICAgdHlwZTogXCJzdHJpbmdcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJjaGFpbklkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcInZlcmlmeWluZ0NvbnRyYWN0XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXMzMlwiLFxuICAgICAgICBuYW1lOiBcInNhbHRcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2W11cIixcbiAgICAgICAgbmFtZTogXCJleHRlbnNpb25zXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NltdXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiZnJlZXplS2V5R2F0ZXdheVwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiZ2F0ZXdheUZyb3plblwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJvb2xcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJib29sXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwiZ3JhY2VQZXJpb2RcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjRcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjRcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcImd1YXJkaWFuXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImd1YXJkaWFuc1wiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJvb2xcIixcbiAgICAgICAgbmFtZTogXCJpc0d1YXJkaWFuXCIsXG4gICAgICAgIHR5cGU6IFwiYm9vbFwiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlczMyXCIsXG4gICAgICAgIG5hbWU6IFwic3RydWN0SGFzaFwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJoYXNoVHlwZWREYXRhVjRcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlczMyXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXMzMlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcImlkUmVnaXN0cnlcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJjb250cmFjdCBJZFJlZ2lzdHJ5TGlrZVwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJpc01pZ3JhdGVkXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYm9vbFwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImJvb2xcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcImZpZFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImVudW0gSUtleVJlZ2lzdHJ5LktleVN0YXRlXCIsXG4gICAgICAgIG5hbWU6IFwic3RhdGVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50OFwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcImluZGV4XCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImtleUF0XCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiZmlkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgbmFtZTogXCJrZXlcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImtleURhdGFPZlwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgY29tcG9uZW50czogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGludGVybmFsVHlwZTogXCJlbnVtIElLZXlSZWdpc3RyeS5LZXlTdGF0ZVwiLFxuICAgICAgICAgICAgbmFtZTogXCJzdGF0ZVwiLFxuICAgICAgICAgICAgdHlwZTogXCJ1aW50OFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDMyXCIsXG4gICAgICAgICAgICBuYW1lOiBcImtleVR5cGVcIixcbiAgICAgICAgICAgIHR5cGU6IFwidWludDMyXCJcbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIGludGVybmFsVHlwZTogXCJzdHJ1Y3QgSUtleVJlZ2lzdHJ5LktleURhdGFcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJ0dXBsZVwiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcImtleUdhdGV3YXlcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiZmlkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgbmFtZTogXCJrZXlcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImtleXNcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJlbnVtIElLZXlSZWdpc3RyeS5LZXlTdGF0ZVwiLFxuICAgICAgICBuYW1lOiBcInN0YXRlXCIsXG4gICAgICAgIHR5cGU6IFwidWludDhcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQzMlwiLFxuICAgICAgICBuYW1lOiBcImtleVR5cGVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MzJcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcImZpZFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImVudW0gSUtleVJlZ2lzdHJ5LktleVN0YXRlXCIsXG4gICAgICAgIG5hbWU6IFwic3RhdGVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50OFwiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcImtleXNPZlwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzW11cIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1tdXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJmaWRcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJlbnVtIElLZXlSZWdpc3RyeS5LZXlTdGF0ZVwiLFxuICAgICAgICBuYW1lOiBcInN0YXRlXCIsXG4gICAgICAgIHR5cGU6IFwidWludDhcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJzdGFydElkeFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJiYXRjaFNpemVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwia2V5c09mXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNbXVwiLFxuICAgICAgICBuYW1lOiBcInBhZ2VcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1tdXCJcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwibmV4dElkeFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJtYXhLZXlzUGVyRmlkXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJtaWdyYXRlXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJtaWdyYXRlZEF0XCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDQwXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwidWludDQwXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwibWlncmF0b3JcIixcbiAgICBvdXRwdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwib3duZXJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwibm9uY2VzXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJvd25lclwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwicGF1c2VcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcInBhdXNlZFwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJvb2xcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJib29sXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJ2aWV3XCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtdLFxuICAgIG5hbWU6IFwicGVuZGluZ093bmVyXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYnl0ZXNcIixcbiAgICAgICAgbmFtZTogXCJrZXlcIixcbiAgICAgICAgdHlwZTogXCJieXRlc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcInJlbW92ZVwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJmaWRPd25lclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgIG5hbWU6IFwia2V5XCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXNcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJkZWFkbGluZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzXCIsXG4gICAgICAgIG5hbWU6IFwic2lnXCIsXG4gICAgICAgIHR5cGU6IFwiYnl0ZXNcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJyZW1vdmVGb3JcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiZ3VhcmRpYW5cIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwicmVtb3ZlR3VhcmRpYW5cIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXSxcbiAgICBuYW1lOiBcInJlbm91bmNlT3duZXJzaGlwXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIl9pZFJlZ2lzdHJ5XCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcInNldElkUmVnaXN0cnlcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJhZGRyZXNzXCIsXG4gICAgICAgIG5hbWU6IFwiX2tleUdhdGV3YXlcIixcbiAgICAgICAgdHlwZTogXCJhZGRyZXNzXCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwic2V0S2V5R2F0ZXdheVwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJfbWF4S2V5c1BlckZpZFwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJzZXRNYXhLZXlzUGVyRmlkXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIl9taWdyYXRvclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJzZXRNaWdyYXRvclwiLFxuICAgIG91dHB1dHM6IFtdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQzMlwiLFxuICAgICAgICBuYW1lOiBcImtleVR5cGVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MzJcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQ4XCIsXG4gICAgICAgIG5hbWU6IFwibWV0YWRhdGFUeXBlXCIsXG4gICAgICAgIHR5cGU6IFwidWludDhcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImNvbnRyYWN0IElNZXRhZGF0YVZhbGlkYXRvclwiLFxuICAgICAgICBuYW1lOiBcInZhbGlkYXRvclwiLFxuICAgICAgICB0eXBlOiBcImFkZHJlc3NcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJzZXRWYWxpZGF0b3JcIixcbiAgICBvdXRwdXRzOiBbXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwibm9ucGF5YWJsZVwiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9LFxuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiZmlkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiZW51bSBJS2V5UmVnaXN0cnkuS2V5U3RhdGVcIixcbiAgICAgICAgbmFtZTogXCJzdGF0ZVwiLFxuICAgICAgICB0eXBlOiBcInVpbnQ4XCJcbiAgICAgIH1cbiAgICBdLFxuICAgIG5hbWU6IFwidG90YWxLZXlzXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcIlwiLFxuICAgICAgICB0eXBlOiBcInVpbnQyNTZcIlxuICAgICAgfVxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInZpZXdcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgICBuYW1lOiBcIm5ld093bmVyXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBuYW1lOiBcInRyYW5zZmVyT3duZXJzaGlwXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJ1bnBhdXNlXCIsXG4gICAgb3V0cHV0czogW10sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcIm5vbnBheWFibGVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCJcbiAgfSxcbiAge1xuICAgIGlucHV0czogW10sXG4gICAgbmFtZTogXCJ1c2VOb25jZVwiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCJcbiAgICAgIH1cbiAgICBdLFxuICAgIHN0YXRlTXV0YWJpbGl0eTogXCJub25wYXlhYmxlXCIsXG4gICAgdHlwZTogXCJmdW5jdGlvblwiXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQzMlwiLFxuICAgICAgICBuYW1lOiBcImtleVR5cGVcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MzJcIlxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQ4XCIsXG4gICAgICAgIG5hbWU6IFwibWV0YWRhdGFUeXBlXCIsXG4gICAgICAgIHR5cGU6IFwidWludDhcIlxuICAgICAgfVxuICAgIF0sXG4gICAgbmFtZTogXCJ2YWxpZGF0b3JzXCIsXG4gICAgb3V0cHV0czogW1xuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwiY29udHJhY3QgSU1ldGFkYXRhVmFsaWRhdG9yXCIsXG4gICAgICAgIG5hbWU6IFwidmFsaWRhdG9yXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiXG4gICAgICB9XG4gICAgXSxcbiAgICBzdGF0ZU11dGFiaWxpdHk6IFwidmlld1wiLFxuICAgIHR5cGU6IFwiZnVuY3Rpb25cIlxuICB9XG5dO1xudmFyIEtFWV9SRUdJU1RSWV9BRERSRVNTID0gXCIweDAwMDAwMDAwZmMxMjM3ODI0ZmI3NDdhYmRlMGZmMTg5OTBlNTliN2VcIjtcblxuLy8gc3JjL2NsaWVudHMvZXRoZXJldW0vdmllbUNvbm5lY3Rvci50c1xudmFyIHZpZW1Db25uZWN0b3IgPSAoYXJncykgPT4ge1xuICBjb25zdCB0cmFuc3BvcnQgPSAoKCkgPT4ge1xuICAgIGlmIChhcmdzPy5ycGNVcmxzKSB7XG4gICAgICByZXR1cm4gZmFsbGJhY2soYXJncy5ycGNVcmxzLm1hcCgocnBjVXJsKSA9PiBodHRwMihycGNVcmwpKSk7XG4gICAgfVxuICAgIGlmICghYXJncz8ucnBjVXJsKSB7XG4gICAgICBjb25zb2xlLndhcm4oXCJObyBgcnBjVXJsYCBwcm92aWRlZCB0byBWaWVtIGNvbm5lY3RvciwgdXNpbmcgcHVibGljIGVuZHBvaW50LiBEbyBub3QgdXNlIHRoaXMgaW4gcHJvZHVjdGlvblwiKTtcbiAgICB9XG4gICAgcmV0dXJuIGh0dHAyKGFyZ3M/LnJwY1VybCk7XG4gIH0pKCk7XG4gIGNvbnN0IHB1YmxpY0NsaWVudCA9IGNyZWF0ZVB1YmxpY0NsaWVudDIoe1xuICAgIGNoYWluOiBvcHRpbWlzbTIsXG4gICAgdHJhbnNwb3J0XG4gIH0pO1xuICBjb25zdCBnZXRGaWQgPSBhc3luYyAoY3VzdG9keSkgPT4ge1xuICAgIHJldHVybiBwdWJsaWNDbGllbnQucmVhZENvbnRyYWN0KHtcbiAgICAgIGFkZHJlc3M6IElEX1JFR0lTVFJZX0FERFJFU1MsXG4gICAgICBhYmk6IGlkUmVnaXN0cnlBQkksXG4gICAgICBmdW5jdGlvbk5hbWU6IFwiaWRPZlwiLFxuICAgICAgYXJnczogW2N1c3RvZHldXG4gICAgfSk7XG4gIH07XG4gIGNvbnN0IGlzVmFsaWRBdXRoQWRkcmVzcyA9IGFzeW5jIChhdXRoQWRkcmVzcywgZmlkKSA9PiB7XG4gICAgY29uc3QgcGFkZGVkQWRkcmVzcyA9IGVuY29kZUFiaVBhcmFtZXRlcnMoW3sgbmFtZTogXCJhdXRoQWRkcmVzc1wiLCB0eXBlOiBcImFkZHJlc3NcIiB9XSwgW2F1dGhBZGRyZXNzXSk7XG4gICAgY29uc3Qga2V5RGF0YSA9IGF3YWl0IHB1YmxpY0NsaWVudC5yZWFkQ29udHJhY3Qoe1xuICAgICAgYWRkcmVzczogS0VZX1JFR0lTVFJZX0FERFJFU1MsXG4gICAgICBhYmk6IGtleVJlZ2lzdHJ5QUJJLFxuICAgICAgZnVuY3Rpb25OYW1lOiBcImtleURhdGFPZlwiLFxuICAgICAgYXJnczogW2ZpZCwgcGFkZGVkQWRkcmVzc11cbiAgICB9KTtcbiAgICByZXR1cm4ga2V5RGF0YS5rZXlUeXBlID09PSAyICYmIGtleURhdGEuc3RhdGUgPT09IDE7XG4gIH07XG4gIHJldHVybiB7XG4gICAgZ2V0RmlkLFxuICAgIGlzVmFsaWRBdXRoQWRkcmVzcyxcbiAgICBwdWJsaWNDbGllbnRcbiAgfTtcbn07XG5leHBvcnQge1xuICBBdXRoQ2xpZW50RXJyb3IsXG4gIGF1dGhlbnRpY2F0ZSxcbiAgYnVpbGRTaWduSW5NZXNzYWdlLFxuICBjcmVhdGVBcHBDbGllbnQsXG4gIGNyZWF0ZUNoYW5uZWwsXG4gIGNyZWF0ZUNsaWVudCxcbiAgY3JlYXRlV2FsbGV0Q2xpZW50LFxuICBnZW5lcmF0ZVNpd2VOb25jZSBhcyBnZW5lcmF0ZU5vbmNlLFxuICBnZXQsXG4gIHBhcnNlU2lnbkluVVJJMiBhcyBwYXJzZVNpZ25JblVSSSxcbiAgcG9sbCxcbiAgcG9zdCxcbiAgc3RhdHVzLFxuICB1bndyYXAsXG4gIHZlcmlmeVNpZ25Jbk1lc3NhZ2UsXG4gIHZpZW1Db25uZWN0b3IsXG4gIHdhdGNoU3RhdHVzXG59O1xuIl0sIm5hbWVzIjpbIl9fZGVmUHJvcCIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiX19kZWZOb3JtYWxQcm9wIiwib2JqIiwia2V5IiwidmFsdWUiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJfX3B1YmxpY0ZpZWxkIiwiZ2VuZXJhdGVTaXdlTm9uY2UiLCJBdXRoQ2xpZW50RXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiZXJyQ29kZSIsImNvbnRleHQiLCJwYXJzZWRDb250ZXh0IiwibWVzc2FnZSIsImNhdXNlIiwibmFtZSIsInVud3JhcCIsInJlc3VsdCIsImlzRXJyIiwiZXJyb3IiLCJpc0Vycm9yIiwiUmVzdWx0QXN5bmMiLCJvayIsImVyciIsImRlZmF1bHRQb2xsT3B0cyIsImludGVydmFsIiwidGltZW91dCIsInN1Y2Nlc3NDb2RlIiwib25SZXNwb25zZSIsImdldCIsImNsaWVudCIsInBhdGg1Iiwib3B0cyIsImZyb21Qcm9taXNlIiwiZmV0Y2giLCJnZXRVUkkiLCJoZWFkZXJzIiwiZ2V0SGVhZGVycyIsImUiLCJhbmRUaGVuIiwicmVzcG9uc2UiLCJqc29uIiwiZGF0YSIsInBvc3QiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsInBvbGwiLCJwb2xsT3B0cyIsImRlYWRsaW5lIiwiRGF0ZSIsIm5vdyIsInJlcyIsImlzT2siLCJzdGF0dXMiLCJQcm9taXNlIiwicmVzb2x2ZSIsInNldFRpbWVvdXQiLCJjb25maWciLCJyZWxheSIsInZlcnNpb24iLCJhdXRoVG9rZW4iLCJwYXRoIiwiY3JlYXRlQ2hhbm5lbCIsInJlcXVlc3QiLCJwYXRoMiIsImNoYW5uZWxUb2tlbiIsImNyZWF0ZVB1YmxpY0NsaWVudCIsImh0dHAiLCJ2ZXJpZnlTaXdlTWVzc2FnZSIsInZlcmlmeVNpd2VNZXNzYWdlVmllbSIsIlJlc3VsdEFzeW5jMiIsImVycjMiLCJvazMiLCJ2YWxpZGF0ZVNpd2VNZXNzYWdlIiwicGFyc2VTaXdlTWVzc2FnZSIsIlJlc3VsdCIsImVycjIiLCJvazIiLCJTVEFURU1FTlQiLCJDSEFJTl9JRCIsIkZJRF9VUklfUkVHRVgiLCJ2YWxpZGF0ZSIsInBhcmFtcyIsImZyb21UaHJvd2FibGUiLCJzaXdlTWVzc2FnZSIsImlzVmFsaWQiLCJ2YWxpZGF0ZVN0YXRlbWVudCIsInZhbGlkYXRlQ2hhaW5JZCIsInZhbGlkYXRlUmVzb3VyY2VzIiwicGFyc2VSZXNvdXJjZXMiLCJmaWQiLCJwYXJzZUZpZCIsInJlc291cmNlIiwicmVzb3VyY2VzIiwiZmluZCIsInJlc291cmNlMiIsInRlc3QiLCJOdW1iZXIiLCJwYXJzZUludCIsIm1hdGNoIiwiaXNOYU4iLCJ2YWxpZFN0YXRlbWVudCIsInN0YXRlbWVudCIsImNoYWluSWQiLCJmaWRSZXNvdXJjZXMiLCJmaWx0ZXIiLCJsZW5ndGgiLCJvcHRpbWlzbSIsImRlZmF1bHRQdWJsaWNDbGllbnQiLCJjaGFpbiIsInRyYW5zcG9ydCIsInZvaWRHZXRGaWQiLCJfY3VzdG9keSIsInJlamVjdCIsInZvaWRJc1ZhbGlkQXV0aEFkZHJlc3MiLCJ2ZXJpZnkiLCJub25jZSIsImRvbWFpbiIsInNpZ25hdHVyZSIsIm9wdGlvbnMiLCJhY2NlcHRBdXRoQWRkcmVzcyIsImdldEZpZCIsImlzVmFsaWRBdXRoQWRkcmVzcyIsInB1YmxpY0NsaWVudCIsInZhbGlkIiwibWVzc2FnZTIiLCJ2YWxpZGF0ZU5vbmNlIiwidmFsaWRhdGVEb21haW4iLCJzaXdlIiwibWVyZ2VSZXNvdXJjZXMiLCJhdXRoIiwidmVyaWZ5QXV0aG9yaXplZFNpZ25lciIsInZlcmlmaWVkIiwic2lnbmVyIiwiYWRkcmVzcyIsImF1dGhBZGRyZXNzUmVzdWx0IiwiQmlnSW50IiwiYXV0aE1ldGhvZCIsImZpZFJlc3VsdCIsInN1Y2Nlc3MiLCJ2ZXJpZnlTaWduSW5NZXNzYWdlIiwiZXRoZXJldW0iLCJwYXRoMyIsInZvaWRDYWxsYmFjayIsIndhdGNoU3RhdHVzIiwiYXJncyIsInBhdGg0IiwiYXV0aGVudGljYXRlIiwiYXV0aEtleSIsImVycjQiLCJvazQiLCJjcmVhdGVTaXdlTWVzc2FnZSIsImJ1aWxkIiwic2l3ZVBhcmFtcyIsImlzc3VlZEF0IiwiYnVpbGRGaWRSZXNvdXJjZSIsImJ1aWxkU2lnbkluTWVzc2FnZSIsIl9jbGllbnQiLCJlcnI1Iiwib2s1IiwicGFyc2VTaWduSW5VUkkiLCJzaWduSW5VcmkiLCJ1cmwiLCJVUkwiLCJzZWFyY2hQYXJhbXMiLCJmcm9tRW50cmllcyIsImVudHJpZXMiLCJ2YWxpZGF0aW9uRmFpbCIsInBhcnNlU2lnbkluVVJJMiIsInVyaSIsImNvbmZpZ0RlZmF1bHRzIiwiY3JlYXRlQ2xpZW50IiwiY3JlYXRlQXBwQ2xpZW50IiwiY3JlYXRlV2FsbGV0Q2xpZW50IiwiY3JlYXRlUHVibGljQ2xpZW50MiIsImVuY29kZUFiaVBhcmFtZXRlcnMiLCJodHRwMiIsImZhbGxiYWNrIiwib3B0aW1pc20yIiwiaWRSZWdpc3RyeUFCSSIsImlucHV0cyIsImludGVybmFsVHlwZSIsInR5cGUiLCJzdGF0ZU11dGFiaWxpdHkiLCJhbm9ueW1vdXMiLCJpbmRleGVkIiwib3V0cHV0cyIsImNvbXBvbmVudHMiLCJJRF9SRUdJU1RSWV9BRERSRVNTIiwia2V5UmVnaXN0cnlBQkkiLCJLRVlfUkVHSVNUUllfQUREUkVTUyIsInZpZW1Db25uZWN0b3IiLCJycGNVcmxzIiwibWFwIiwicnBjVXJsIiwiY29uc29sZSIsIndhcm4iLCJjdXN0b2R5IiwicmVhZENvbnRyYWN0IiwiYWJpIiwiZnVuY3Rpb25OYW1lIiwiYXV0aEFkZHJlc3MiLCJwYWRkZWRBZGRyZXNzIiwia2V5RGF0YSIsImtleVR5cGUiLCJzdGF0ZSIsImdlbmVyYXRlTm9uY2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@farcaster/auth-client/dist/index.mjs\n");

/***/ })

};
;